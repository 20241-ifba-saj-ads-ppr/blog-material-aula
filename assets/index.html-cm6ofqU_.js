import{_ as s,a,b as e,c as t,d as p}from"./estrutura-V1jB47pf.js";import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,a as l,o as i}from"./app-BrOvOMMH.js";const u={};function r(k,n){return i(),c("div",null,n[0]||(n[0]=[l('<h1 id="flyweight" tabindex="-1"><a class="header-anchor" href="#flyweight"><span>Flyweight</span></a></h1><hr><h2 id="intencao" tabindex="-1"><a class="header-anchor" href="#intencao"><span>Intenção</span></a></h2><ul><li>Usar compartilhamento para suportar eficientemente grandes quantidades de objetos de granularidade fina.<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></li><li>Compartilhar, de forma eficiente, objetos que são usados em grande quantidade.<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup></li></ul><hr><h2 id="tambem-conhecido-como" tabindex="-1"><a class="header-anchor" href="#tambem-conhecido-como"><span>Também conhecido como</span></a></h2><p><sup class="footnote-ref"><a href="#footnote1">[1:1]</a><a class="footnote-anchor" id="footnote-ref1:1"></a></sup></p><ul><li>Peso mosca</li><li>Cache</li></ul><hr><h2 id="motivacao" tabindex="-1"><a class="header-anchor" href="#motivacao"><span>Motivação</span></a></h2><h3 id="gof" tabindex="-1"><a class="header-anchor" href="#gof"><span>GOF</span></a></h3><p><sup class="footnote-ref"><a href="#footnote1">[1:2]</a><a class="footnote-anchor" id="footnote-ref1:2"></a></sup></p><h4 id="descricao" tabindex="-1"><a class="header-anchor" href="#descricao"><span>Descrição</span></a></h4><p>Algumas aplicações poderiam se beneficiar da sua estruturação em objetos em todo o seu projeto, porém, uma implementação ingênua seria proibitivamente cara. Por exemplo, a maioria das implementações de editores de documentos tem recursos para formatação e edição de textos que são, até certo ponto, modularizados. Editores de documento orientados a objetos usam objetos para representar elementos embutidos, tais como tabelas e figuras. No entanto, normalmente eles não chegam a usar objetos para cada caractere do documento, mesmo que, se assim o fizessem, promovessem ao máximo a flexibilidade na aplicação. Caracteres e elementos embutidos poderiam, então, ser tratados uniformemente com relação à maneira como são desenhados e formatados. A aplicação poderia ser estendida para suportar novos conjuntos de caracteres sem afetar outras funcionalidades. A estrutura dos objetos da aplicação poderia imitar a estrutura física do documento. O diagrama da página 188 mostra como o editor de documentos pode usar objetos para representar caracteres. O aspecto negativo de tal estruturação é o seu custo. Mesmo documentos de tamanhos moderados podem requerer centenas de milhares de objetos-caracteres, o que consumirá uma grande quantidade de memória, podendo incorrer num custo inaceitável em tempo de execução. O padrão Flyweight descreve como compartilhar objetos para permitir o seu uso em granularidades finas sem incorrer num custo proibitivo.</p><p>Um flyweight (peso-mosca)* é um objeto compartilhado que pode ser usado em múltiplos contextos simultaneamente. O flyweight funciona como um objeto independente em cada contexto – ele é indistinguível de uma instância do objeto que não é compartilhada. Os flyweights não podem fazer hipóteses ou asserções sobre o contexto no qual operam. Aqui, o conceito-chave é entre estado intrínseco e extrínseco. O estado intrínseco é armazenado no flyweight; ele consiste de informações independentes do contexto do flyweight, desta forma tornando-o compartilhado. O estado extrínseco depende de e varia com o contexto do flyweight e, portanto, não pode ser compartilhado. Os objetos-cliente são responsáveis pela passagem de estados extrínsecos para o flyweight quando necessário. Os flyweights modelam conceitos ou entidades e são normalmente muito numerosos para serem representados por objetos. Por exemplo, um editor de documentos pode criar um flyweight para cada letra do alfabeto. Cada flyweight armazena o código de um caractere, mas as coordenadas da sua posição do documento e seu estilo tipográfico podem ser determinados a partir de algoritmos de layout do texto e dos comandos de formatação que estão em vigor sempre que o caractere aparece. O código do caractere é o estado intrínseco, enquanto que as outras informações são extrínsecas. Logicamente, existe um objeto para cada ocorrência de um dado caractere no documento:</p><figure><img src="'+s+'" alt="Estrutura do Exemplo GOF" tabindex="0" loading="lazy"><figcaption>Estrutura do Exemplo GOF</figcaption></figure><p>Fisicamente, contudo, existe um objeto compartilhado flyweight por caractere e ele aparece em diferentes contextos na estrutura do documento. Cada ocorrência deum objeto de caractere referencia a mesma instância no pool de objetos flyweight.</p><figure><img src="'+a+'" alt="Estrutura do Exemplo GOF" tabindex="0" loading="lazy"><figcaption>Estrutura do Exemplo GOF</figcaption></figure><p>A estrutura de classes para esses objetos é mostrada a seguir. Glyph é a classe abstrata de objetos gráficos, alguns dos quais podem ser flyweights. As operações que podem depender de um estado extrínseco recebem-no como um parâmetro. Por exemplo, Draw e Intersects devem conhecer em qual contexto o glifo está, antes que possam executar o seu trabalho.</p><p>Um flyweight que representa a letra “a” somente armazena o correspondente código de caractere; ele não necessita armazenar a sua localização ou fonte tipográfica. Os clientes fornecem a informação dependente do contexto que o flyweight necessita para desenhar a si próprio. Por exemplo, um glifo Row sabe onde seus filhos deveriam desenhar a si próprios, de maneira que sejam arrumados horizontalmente. Assim, ele pode passar para cada filho sua localização na solicitação do desenho. Uma vez que o número de objetos de caracteres diferentes é muito menor que o número de caracteres do documento, o número total de objetos é substancialmente menor do que aquele que seria usado por uma implementação ingênua. Um documento no qual todos os caracteres aparecem na mesma fonte tipográfica e na mesma cor colocará algo na ordem de 100 objetos de caracteres (aproximadamente o tamanho do conjunto de caracteres ASCII), independente do comprimento do documento. E uma vez que a maioria dos documentos não usa mais do que 10 diferentes combinações de fonte-cor, esse número não crescerá muito. Dessa maneira, uma abstração de objeto se torna prática para caracteres individuais.</p><h4 id="diagrama" tabindex="-1"><a class="header-anchor" href="#diagrama"><span>Diagrama</span></a></h4><figure><img src="'+e+`" alt="Estrutura do Exemplo K19" tabindex="0" loading="lazy"><figcaption>Estrutura do Exemplo K19</figcaption></figure><h4 id="implementacao" tabindex="-1"><a class="header-anchor" href="#implementacao"><span>Implementação</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Glyph</span> <span class="token punctuation">{</span>

    <span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token class-name">Context</span> <span class="token class-name">Context</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">boolean</span> <span class="token function">intersects</span><span class="token punctuation">(</span><span class="token class-name">Point</span> <span class="token class-name">Point</span><span class="token punctuation">,</span> <span class="token class-name">Context</span> <span class="token class-name">Context</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Character</span> <span class="token keyword">implements</span> <span class="token class-name">Glyph</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> character<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Character</span><span class="token punctuation">(</span><span class="token class-name">String</span> character<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>character <span class="token operator">=</span> character<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token class-name">Context</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Aqui fica a lógica do método para desenhar o objeto.</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">intersects</span><span class="token punctuation">(</span><span class="token class-name">Point</span> <span class="token class-name">Point</span><span class="token punctuation">,</span> <span class="token class-name">Context</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Aqui fica a lógica do método, pelo que compreendi ele</span>
        <span class="token comment">// é utilizado para verificar se o cursor do mouse bate </span>
        <span class="token comment">// com a posição(Context) do objeto.</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Row</span> <span class="token keyword">implements</span> <span class="token class-name">Glyph</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token class-name">Context</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Aqui fica a lógica do método para desenhar o objeto.</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">intersects</span><span class="token punctuation">(</span><span class="token class-name">Point</span> <span class="token class-name">Point</span><span class="token punctuation">,</span> <span class="token class-name">Context</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Aqui fica a lógica do método, pelo que compreendi ele</span>
        <span class="token comment">// é utilizado para verificar se o cursor do mouse bate</span>
        <span class="token comment">// com a posição(Context) do objeto.</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Column</span> <span class="token keyword">implements</span> <span class="token class-name">Glyph</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token class-name">Context</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Aqui fica a lógica do método para desenhar o objeto.</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">intersects</span><span class="token punctuation">(</span><span class="token class-name">Point</span> <span class="token class-name">Point</span><span class="token punctuation">,</span> <span class="token class-name">Context</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Aqui fica a lógica do método, pelo que compreendi ele</span>
        <span class="token comment">// é utilizado para verificar se o cursor do mouse bate </span>
        <span class="token comment">// com a posição(Context) do objeto.</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlyphFactory</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Glyph</span><span class="token punctuation">&gt;</span></span> glyphs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Glyph</span> <span class="token function">getGlyph</span><span class="token punctuation">(</span><span class="token class-name">String</span> character<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Glyph</span> glyph <span class="token operator">=</span> glyphs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>character<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>glyph <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            glyph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Character</span><span class="token punctuation">(</span>character<span class="token punctuation">)</span><span class="token punctuation">;</span>
            glyphs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>character<span class="token punctuation">,</span> glyph<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> glyph<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Editor</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">GlyphFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GlyphFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Glyph</span> a <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getGlyph</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Glyph</span> p <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getGlyph</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Glyph</span> p2 <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getGlyph</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Glyph</span> a2 <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getGlyph</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Glyph</span> r <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getGlyph</span><span class="token punctuation">(</span><span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Glyph</span> e <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getGlyph</span><span class="token punctuation">(</span><span class="token string">&quot;e&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Glyph</span> n <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getGlyph</span><span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Glyph</span> t <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getGlyph</span><span class="token punctuation">(</span><span class="token string">&quot;t&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Desenhando os caracteres em suas respectivas posições</span>
        a<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Context</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        p<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Context</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        p2<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Context</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        a2<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Context</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//...</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="participantes" tabindex="-1"><a class="header-anchor" href="#participantes"><span>Participantes</span></a></h4><ul><li><strong>Flyweight (<code>Glyph</code>)</strong><ul><li>Declara uma interface através da qual flyweights podem receber e atuar sobre estados extrínsecos.</li></ul></li><li><strong>ConcreteFlyweight (<code>Character</code>)</strong><ul><li>Implementa a interface de Flyweight e acrescenta armazenamento para estados intrínsecos, se houver. Um objeto ConcreteFlyweight deve ser compartilhável. Qualquer estado que ele armazene deve ser intrínseco, ou seja, independente do contexto do objeto ConcreteFlyweight.</li></ul></li><li><strong>UnsharedConcreteFlyweight (<code>Row, Column</code>)</strong><ul><li>Nem todas as subclasses de Flyweight necessitam ser compartilhadas. A interface de Flyweight habilita o compartilhamento; ela não o força ou o garante. É comum para objetos UnsharedConcreteFlyweight não compartilhar objetos ConcreteFlyweight como filhos em algum nível da estrutura de objetos de Flyweight.</li></ul></li><li><strong>FlyweightFactory(<code>GlyphFactory</code>)</strong><ul><li>Cria e gerencia objetos flyweight;</li><li>Garante que os flyweights sejam compartilhados apropriadamente. Quando um cliente solicita um flyweight, um objeto FlyweightFactory fornece uma instância existente ou cria uma, se nenhuma existir.</li></ul></li><li><strong>Client(<code>Editor</code>)</strong><ul><li>Mantém uma referência para flyweight(s);</li><li>Computa ou armazena o estado extrínseco do flyweight(s).</li></ul></li></ul><h3 id="k19" tabindex="-1"><a class="header-anchor" href="#k19"><span>K19</span></a></h3><p><sup class="footnote-ref"><a href="#footnote2">[2:1]</a><a class="footnote-anchor" id="footnote-ref2:1"></a></sup></p><h4 id="descricao-1" tabindex="-1"><a class="header-anchor" href="#descricao-1"><span>Descrição</span></a></h4><p>Estamos desenvolvendo uma aplicação para gerenciar milhares de apresentações com slides. Essa aplicação disponibilizará um conjunto de temas que podem ser aplicado individualmente em cada slide de uma apresentação. Em geral, oconteúdo(título e texto) de cada slide é único. Portanto, não seria possível compartilhar de maneira eficiente o conteúdo de slides diferentes. Por outro lado, como vários slides podem utilizar o mesmo tema, eles poderiam compartilhar as informações relativas à formatação da fonte, cor de fundo, layout, e etc. Consequentemente, a quantidade de memória utilizada seria drasticamente reduzida.</p><h4 id="diagrama-1" tabindex="-1"><a class="header-anchor" href="#diagrama-1"><span>Diagrama</span></a></h4><figure><img src="`+t+`" alt="Estrutura do Exemplo K19" tabindex="0" loading="lazy"><figcaption>Estrutura do Exemplo K19</figcaption></figure><h4 id="implementacao-1" tabindex="-1"><a class="header-anchor" href="#implementacao-1"><span>Implementação</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">TemaFlyweight</span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">imprime</span><span class="token punctuation">(</span><span class="token class-name">String</span> titulo<span class="token punctuation">,</span> <span class="token class-name">String</span> texto<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TemaHifen</span> <span class="token keyword">implements</span> <span class="token class-name">TemaFlyweight</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">imprime</span><span class="token punctuation">(</span><span class="token class-name">String</span> titulo<span class="token punctuation">,</span> <span class="token class-name">String</span> texto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// implementação</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TemaAsterisco</span> <span class="token keyword">implements</span> <span class="token class-name">TemaFlyweight</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">imprime</span><span class="token punctuation">(</span><span class="token class-name">String</span> titulo<span class="token punctuation">,</span> <span class="token class-name">String</span> texto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// implementação</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TemaFlyweightFactory</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">TemaFlyweight</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">TemaFlyweight</span><span class="token punctuation">&gt;</span></span> temas <span class="token operator">=</span> <span class="token keyword">new</span> 
        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">TemaFlyweight</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">TemaFlyweight</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TemaAsterisco</span><span class="token punctuation">&gt;</span></span> <span class="token constant">ASTERISCO</span> <span class="token operator">=</span> <span class="token class-name">TemaAsterisco</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TemaHifen</span><span class="token punctuation">&gt;</span></span> <span class="token constant">HIFEN</span> <span class="token operator">=</span> <span class="token class-name">TemaHifen</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TemaK19</span><span class="token punctuation">&gt;</span></span> <span class="token constant">K19</span> <span class="token operator">=</span> <span class="token class-name">TemaK19</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">TemaFlyweight</span> <span class="token function">getTema</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">TemaFlyweight</span><span class="token punctuation">&gt;</span></span> clazz<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>temas<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                temas<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> clazz<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> temas<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Slide</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">TemaFlyweight</span> tema<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Slide</span><span class="token punctuation">(</span><span class="token class-name">TemaFlyweight</span> tema<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>tema <span class="token operator">=</span> tema<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">TemaFlyweight</span> tema <span class="token operator">=</span> <span class="token class-name">TemaFlyweightFactory</span><span class="token punctuation">.</span><span class="token function">getTema</span><span class="token punctuation">(</span><span class="token class-name">TemaFlyweightFactory</span><span class="token punctuation">.</span><span class="token constant">K19</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Slide</span> slide <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Slide</span><span class="token punctuation">(</span>tema<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="participantes-1" tabindex="-1"><a class="header-anchor" href="#participantes-1"><span>Participantes</span></a></h4><ul><li><strong>Flyweight (<code>TemaFlyweight</code>)</strong><ul><li>Interface que define os objetos que serão compartilhados.</li></ul></li><li><strong>ConcreteFlyweight (<code>TemaHifen, TemaAsterisco, TemaK19</code>)</strong><ul><li>Tipo específico de Flyweight.</li></ul></li><li><strong>FlyweightFactory(<code>TemaFlyweightFactory</code>)</strong><ul><li>Classe que controla a criação e recuperação de Flyweights.</li></ul></li><li><strong>Client</strong><ul><li>Utiliza FlyweightFactory para recuperar os Flyweights.</li></ul></li></ul><hr><h2 id="aplicabilidade" tabindex="-1"><a class="header-anchor" href="#aplicabilidade"><span>Aplicabilidade</span></a></h2><p>A eficiência do padrão Flyweight depende muito de como e onde ele é usado. Aplique o padrão Flyweight quando todas as condições a seguir forem verdadeiras:</p><ul><li>Uma aplicação utiliza um grande número de objetos;</li><li>Os custos de armazenamento são altos por causa da grande quantidade de objetos;</li><li>A maioria dos estados de objetos pode ser tornada extrínseca;</li><li>Muitos grupos de objetos podem ser substituídos por relativamente poucos objetos compartilhados, uma vez que estados extrínsecos são removidos;</li><li>A aplicação não depende da identidade dos objetos. Uma vez que objetosFlyweights podem ser compartilhados, testes de identidade produzirão o valor verdadeiro para objetos conceitualmente distintos.</li></ul><hr><h2 id="estrutura" tabindex="-1"><a class="header-anchor" href="#estrutura"><span>Estrutura</span></a></h2><figure><img src="`+p+`" alt="Estrutura do Flyweight" tabindex="0" loading="lazy"><figcaption>Estrutura do Flyweight</figcaption></figure><hr><h2 id="colaboracoes" tabindex="-1"><a class="header-anchor" href="#colaboracoes"><span>Colaborações</span></a></h2><ul><li>O estado que um flyweight necessita para funcionar deve ser caracterizado como intrínseco ou como extrínseco. Um estado intrínseco é armazenado no objeto ConcreteFlyweight; um estado extrínseco é armazenado ou computa do por objetos Client. Os clientes passam este estado para o flyweight quando invocam suas operações.</li><li>Os clientes não deveriam instanciar ConcreteFlyweights diretamente. Eles devem obter objetos ConcreteFlyweight exclusivamente do objeto FlyweightFactory para garantir que sejam compartilhados de forma apropriada.</li></ul><hr><h2 id="consequencias" tabindex="-1"><a class="header-anchor" href="#consequencias"><span>Consequências</span></a></h2><ul><li><strong>Vantagens</strong></li></ul><ol><li><strong>Redução no consumo de memória</strong>: Ao compartilhar estados intrínsecos entre vários objetos, o padrão Flyweight economiza espaço na memória, especialmente quando há um grande número de objetos semelhantes.</li><li><strong>Eficiência no uso de recursos</strong>: Flyweight é ideal para cenários com muitos objetos de curta duração ou que compartilham muitos estados, otimizando o uso dos recursos do sistema.</li></ol><ul><li><strong>Desvantagens</strong></li></ul><ol><li><strong>Complexidade</strong>: A separação dos estados intrínsecos e extrínsecos aumenta a complexidade do código.</li></ol><hr><h2 id="implementacao-2" tabindex="-1"><a class="header-anchor" href="#implementacao-2"><span>Implementação</span></a></h2><p>Ao implementar o padrão <strong>Flyweight</strong> leve em consideração os seguintes passos:</p><ol><li><p><strong>Remoção dos estados extrínsecos</strong>. A aplicabilidade do padrão é determinada em grande medida pela facilidade de identificação de estados extrínsecos e pela sua remoção dos objetos compartilhados. A remoção dos estados extrínsecos não ajudará a reduzir os custos de armazenamento se existirem tantos tipos diferentes de estados extrínsecos quanto existem objetos antes do compartilhamento. Idealmente, o estado extrínseco pode ser computado a partir de uma estrutura de objeto separada, estrutura essa com requisitos de armazenamento muito menores.</p></li><li><p><strong>A gerência dos objetos compartilhados</strong>. Se objetos são compartilhados, os clientes não devem instanciá-los diretamente. FlyweightFactory permite aos clientes a localização de um flyweight específico. Objetos FlyweightFactory freqüentemente usam uma memória associativa para permitir aos clientes encontrar os flyweights de seu interesse.</p></li></ol><hr><h2 id="meu-exemplo-de-codigo" tabindex="-1"><a class="header-anchor" href="#meu-exemplo-de-codigo"><span>Meu exemplo de código</span></a></h2><h3 id="versao-1" tabindex="-1"><a class="header-anchor" href="#versao-1"><span>Versão 1</span></a></h3><p><strong><code>Classe HamburguerFlyweight</code></strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HamburguerFlyweight</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> carne<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> pao<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> queijo<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">HamburguerFlyweight</span><span class="token punctuation">(</span><span class="token class-name">String</span> carne<span class="token punctuation">,</span> <span class="token class-name">String</span> pao<span class="token punctuation">,</span> <span class="token class-name">String</span> queijo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>carne <span class="token operator">=</span> carne<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>pao <span class="token operator">=</span> pao<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>queijo <span class="token operator">=</span> queijo<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getCarne</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> carne<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getPao</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> pao<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getQueijo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> queijo<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>Classe Hamburguer</code></strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hamburguer</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> nome<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> acompanhamentos<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">HamburguerFlyweight</span> hamburguerFlyweight<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Hamburguer</span><span class="token punctuation">(</span><span class="token class-name">String</span> nome<span class="token punctuation">,</span> <span class="token class-name">HamburguerFlyweight</span> hamburguerFlyweight<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> acompanhamentos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>nome <span class="token operator">=</span> nome<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>hamburguerFlyweight <span class="token operator">=</span> hamburguerFlyweight<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>acompanhamentos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>acompanhamentos<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>acompanhamentos<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">prepararHamburguer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Preparando: &quot;</span> <span class="token operator">+</span> nome<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Carne: &quot;</span> <span class="token operator">+</span> hamburguerFlyweight<span class="token punctuation">.</span><span class="token function">getCarne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Pão: &quot;</span> <span class="token operator">+</span> hamburguerFlyweight<span class="token punctuation">.</span><span class="token function">getPao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Queijo: &quot;</span> <span class="token operator">+</span> hamburguerFlyweight<span class="token punctuation">.</span><span class="token function">getQueijo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> elem <span class="token operator">:</span> acompanhamentos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Acompanhamento: &quot;</span> <span class="token operator">+</span> elem<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>Classe FlyweightFactory</code></strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FlyweightFactory</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">HamburguerFlyweight</span><span class="token punctuation">&gt;</span></span> hamburguerFlyweights <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">HamburguerFlyweight</span> <span class="token function">getHamburguerTipo</span><span class="token punctuation">(</span><span class="token class-name">String</span> carne<span class="token punctuation">,</span> <span class="token class-name">String</span> pao<span class="token punctuation">,</span> <span class="token class-name">String</span> queijo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> id <span class="token operator">=</span> carne<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;_&quot;</span> <span class="token operator">+</span> pao<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;_&quot;</span> <span class="token operator">+</span> queijo<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">HamburguerFlyweight</span> hamburguerFlyweight <span class="token operator">=</span> hamburguerFlyweights<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>hamburguerFlyweight <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            hamburguerFlyweight <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HamburguerFlyweight</span><span class="token punctuation">(</span>carne<span class="token punctuation">,</span> pao<span class="token punctuation">,</span> queijo<span class="token punctuation">)</span><span class="token punctuation">;</span>
            hamburguerFlyweights<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> hamburguerFlyweight<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> hamburguerFlyweight<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">HamburguerFlyweight</span><span class="token punctuation">&gt;</span></span> <span class="token function">getHamburguerFlyweights</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> hamburguerFlyweights<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>Classe Hamburgueria</code></strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hamburgueria</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Hamburguer</span><span class="token punctuation">&gt;</span></span> hamburguers<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Hamburgueria</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>hamburguers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addHamburguer</span><span class="token punctuation">(</span><span class="token class-name">String</span> nome<span class="token punctuation">,</span> <span class="token class-name">String</span> carne<span class="token punctuation">,</span> <span class="token class-name">String</span> pao<span class="token punctuation">,</span> <span class="token class-name">String</span> queijo<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> acompanhamentos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">HamburguerFlyweight</span> tipo <span class="token operator">=</span> <span class="token class-name">FlyweightFactory</span><span class="token punctuation">.</span><span class="token function">getHamburguerTipo</span><span class="token punctuation">(</span>carne<span class="token punctuation">,</span> pao<span class="token punctuation">,</span> queijo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Hamburguer</span> ham <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hamburguer</span><span class="token punctuation">(</span>nome<span class="token punctuation">,</span> tipo<span class="token punctuation">,</span> acompanhamentos<span class="token punctuation">)</span><span class="token punctuation">;</span>
        hamburguers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ham<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Hamburguer</span><span class="token punctuation">&gt;</span></span> <span class="token function">getHamburguers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> hamburguers<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>Classe Main | Código cliente</code></strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">Hamburgueria</span> hamburgueria <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hamburgueria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        hamburgueria<span class="token punctuation">.</span><span class="token function">addHamburguer</span><span class="token punctuation">(</span><span class="token string">&quot;Cheddar Bacon&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bovina&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Brioche&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Cheddar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bacon&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Maionese&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hamburgueria<span class="token punctuation">.</span><span class="token function">addHamburguer</span><span class="token punctuation">(</span><span class="token string">&quot;Cheddar Tradicional&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bovina&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Brioche&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Cheddar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Cebola Caramelizada&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Molho Barbecue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hamburgueria<span class="token punctuation">.</span><span class="token function">addHamburguer</span><span class="token punctuation">(</span><span class="token string">&quot;Frango Light&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Frango&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Integral&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Suíço&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Alface&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Tomate&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Molho Iogurte&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Hamburguer</span> hamburguer <span class="token operator">:</span> hamburgueria<span class="token punctuation">.</span><span class="token function">getHamburguers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            hamburguer<span class="token punctuation">.</span><span class="token function">prepararHamburguer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\\n---------------------------\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Total de hamburguers criados: &quot;</span> <span class="token operator">+</span> hamburgueria<span class="token punctuation">.</span><span class="token function">getHamburguers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">HamburguerFlyweight</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> <span class="token class-name">FlyweightFactory</span><span class="token punctuation">.</span><span class="token function">getHamburguerFlyweights</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">HamburguerFlyweight</span> flyweight <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Flyweight hamburguer: &quot;</span> <span class="token operator">+</span> flyweight<span class="token punctuation">.</span><span class="token function">getHamburguerFlyweight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\\n---------------------------\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Total de tipos de Flyweights criados: &quot;</span> <span class="token operator">+</span> <span class="token class-name">FlyweightFactory</span><span class="token punctuation">.</span><span class="token function">getHamburguerFlyweights</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>Resultado do Main</code></strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Preparando</span><span class="token operator">:</span> <span class="token class-name">Cheddar</span> <span class="token class-name">Bacon</span>
<span class="token class-name">Carne</span><span class="token operator">:</span> <span class="token class-name">Bovina</span>
<span class="token class-name">P</span>ão<span class="token operator">:</span> <span class="token class-name">Brioche</span>
<span class="token class-name">Queijo</span><span class="token operator">:</span> <span class="token class-name">Cheddar</span>
<span class="token class-name">Acompanhamento</span><span class="token operator">:</span> <span class="token class-name">Bacon</span>
<span class="token class-name">Acompanhamento</span><span class="token operator">:</span> <span class="token class-name">Maionese</span>

<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>

<span class="token class-name">Preparando</span><span class="token operator">:</span> <span class="token class-name">Cheddar</span> <span class="token class-name">Tradicional</span>
<span class="token class-name">Carne</span><span class="token operator">:</span> <span class="token class-name">Bovina</span>
<span class="token class-name">P</span>ão<span class="token operator">:</span> <span class="token class-name">Brioche</span>
<span class="token class-name">Queijo</span><span class="token operator">:</span> <span class="token class-name">Cheddar</span>
<span class="token class-name">Acompanhamento</span><span class="token operator">:</span> <span class="token class-name">Cebola</span> <span class="token class-name">Caramelizada</span>
<span class="token class-name">Acompanhamento</span><span class="token operator">:</span> <span class="token class-name">Molho</span> <span class="token class-name">Barbecue</span>

<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>

<span class="token class-name">Preparando</span><span class="token operator">:</span> <span class="token class-name">Frango</span> <span class="token class-name">Light</span>
<span class="token class-name">Carne</span><span class="token operator">:</span> <span class="token class-name">Frango</span>
<span class="token class-name">P</span>ão<span class="token operator">:</span> <span class="token class-name">Integral</span>
<span class="token class-name">Queijo</span><span class="token operator">:</span> <span class="token class-name">Su</span>íço
<span class="token class-name">Acompanhamento</span><span class="token operator">:</span> <span class="token class-name">Alface</span>
<span class="token class-name">Acompanhamento</span><span class="token operator">:</span> <span class="token class-name">Tomate</span>
<span class="token class-name">Acompanhamento</span><span class="token operator">:</span> <span class="token class-name">Molho</span> <span class="token class-name">Iogurte</span>

<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>

<span class="token class-name">Total</span> de hamburguers criados<span class="token operator">:</span> <span class="token number">3</span>

<span class="token class-name">Flyweight</span> hamburguer<span class="token operator">:</span>
<span class="token class-name">Carne</span><span class="token operator">:</span> <span class="token class-name">Bovina</span>
<span class="token class-name">P</span>ão<span class="token operator">:</span> <span class="token class-name">Brioche</span>
<span class="token class-name">Queijo</span><span class="token operator">:</span> <span class="token class-name">Cheddar</span>

<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>

<span class="token class-name">Flyweight</span> hamburguer<span class="token operator">:</span>
<span class="token class-name">Carne</span><span class="token operator">:</span> <span class="token class-name">Frango</span>
<span class="token class-name">P</span>ão<span class="token operator">:</span> <span class="token class-name">Integral</span>
<span class="token class-name">Queijo</span><span class="token operator">:</span> <span class="token class-name">Su</span>íço

<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>

<span class="token class-name">Total</span> de tipos de <span class="token class-name">Flyweights</span> criados<span class="token operator">:</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="versao-2" tabindex="-1"><a class="header-anchor" href="#versao-2"><span>Versão 2</span></a></h3><p><strong><code>Interface Hamburguer</code></strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Hamburguer</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">prepararHamburguer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">adicionarAcompanhamentos</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> acompanhamentos<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>Classe HamburguerBovino</code></strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HamburguerBovino</span> <span class="token keyword">implements</span> <span class="token class-name">Hamburguer</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> nome<span class="token punctuation">,</span> carne<span class="token punctuation">,</span> pao<span class="token punctuation">,</span> queijo<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> acompanhamentos<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">HamburguerBovino</span><span class="token punctuation">(</span><span class="token class-name">String</span> nome<span class="token punctuation">,</span> <span class="token class-name">String</span> carne<span class="token punctuation">,</span> <span class="token class-name">String</span> pao<span class="token punctuation">,</span> <span class="token class-name">String</span> queijo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>nome <span class="token operator">=</span> nome<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>carne <span class="token operator">=</span> carne<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>pao <span class="token operator">=</span> pao<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>queijo <span class="token operator">=</span> queijo<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>acompanhamentos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">prepararHamburguer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Preparando: &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>nome<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Carne: &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>carne<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Pão: &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pao<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Queijo: &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>queijo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> acompanhamento <span class="token operator">:</span> acompanhamentos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Acompanhamento: &quot;</span> <span class="token operator">+</span> acompanhamento<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">adicionarAcompanhamentos</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> acompanhamentos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>acompanhamentos<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>acompanhamentos<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>Classe HamburguerSuino</code></strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HamburguerSuino</span> <span class="token keyword">implements</span> <span class="token class-name">Hamburguer</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> nome<span class="token punctuation">,</span> carne<span class="token punctuation">,</span> pao<span class="token punctuation">,</span> queijo<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> acompanhamentos<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">HamburguerSuino</span><span class="token punctuation">(</span><span class="token class-name">String</span> nome<span class="token punctuation">,</span> <span class="token class-name">String</span> carne<span class="token punctuation">,</span> <span class="token class-name">String</span> pao<span class="token punctuation">,</span> <span class="token class-name">String</span> queijo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>nome <span class="token operator">=</span> nome<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>carne <span class="token operator">=</span> carne<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>pao <span class="token operator">=</span> pao<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>queijo <span class="token operator">=</span> queijo<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>acompanhamentos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">prepararHamburguer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Preparando: &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>nome<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Carne: &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>carne<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Pão: &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pao<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Queijo: &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>queijo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> acompanhamento <span class="token operator">:</span> acompanhamentos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Acompanhamento: &quot;</span> <span class="token operator">+</span> acompanhamento<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">adicionarAcompanhamentos</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> acompanhamentos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>acompanhamentos<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>acompanhamentos<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>Classe HamburguerFlyweightFactory</code></strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HamburguerFlyweightFactory</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Hamburguer</span><span class="token punctuation">&gt;</span></span> hamburgueres <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Hamburguer</span> <span class="token function">getHamburguerTipo</span><span class="token punctuation">(</span><span class="token class-name">String</span> nome<span class="token punctuation">,</span> <span class="token class-name">String</span> carne<span class="token punctuation">,</span> <span class="token class-name">String</span> pao<span class="token punctuation">,</span> <span class="token class-name">String</span> queijo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> id <span class="token operator">=</span> carne <span class="token operator">+</span> pao <span class="token operator">+</span> queijo<span class="token punctuation">;</span>

        <span class="token class-name">Hamburguer</span> hamburguer <span class="token operator">=</span> hamburgueres<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>hamburguer <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>carne<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;Bovina&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                hamburguer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HamburguerBovino</span><span class="token punctuation">(</span>nome<span class="token punctuation">,</span> carne<span class="token punctuation">,</span> pao<span class="token punctuation">,</span> queijo<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>carne<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;Suina&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                hamburguer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HamburguerSuino</span><span class="token punctuation">(</span>nome<span class="token punctuation">,</span> carne<span class="token punctuation">,</span> pao<span class="token punctuation">,</span> queijo<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            hamburgueres<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> hamburguer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> hamburguer<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Hamburguer</span><span class="token punctuation">&gt;</span></span> <span class="token function">getHamburguerFlyweights</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> hamburgueres<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>Classe Hamburgueria</code></strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hamburgueria</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Hamburguer</span><span class="token punctuation">&gt;</span></span> hamburguers<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Hamburgueria</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>hamburguers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addHamburguer</span><span class="token punctuation">(</span><span class="token class-name">String</span> nome<span class="token punctuation">,</span> <span class="token class-name">String</span> carne<span class="token punctuation">,</span> <span class="token class-name">String</span> pao<span class="token punctuation">,</span> <span class="token class-name">String</span> queijo<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> acompanhamentos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Hamburguer</span> ham <span class="token operator">=</span> <span class="token class-name">HamburguerFlyweightFactory</span><span class="token punctuation">.</span><span class="token function">getHamburguerTipo</span><span class="token punctuation">(</span>nome<span class="token punctuation">,</span> carne<span class="token punctuation">,</span> pao<span class="token punctuation">,</span> queijo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ham<span class="token punctuation">.</span><span class="token function">adicionarAcompanhamentos</span><span class="token punctuation">(</span>acompanhamentos<span class="token punctuation">)</span><span class="token punctuation">;</span>
        hamburguers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ham<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Hamburguer</span><span class="token punctuation">&gt;</span></span> <span class="token function">getHamburguers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> hamburguers<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>Classe Main | Código cliente</code></strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">HamburguerFlyweightFactory</span> hamburguerFlyweightFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HamburguerFlyweightFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Hamburgueria</span> hamburgueria <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hamburgueria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        hamburgueria<span class="token punctuation">.</span><span class="token function">addHamburguer</span><span class="token punctuation">(</span><span class="token string">&quot;Cheddar Bacon&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bovina&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Brioche&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Cheddar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bacon&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Maionese&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hamburgueria<span class="token punctuation">.</span><span class="token function">addHamburguer</span><span class="token punctuation">(</span><span class="token string">&quot;Cheddar Tradicional&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bovina&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Brioche&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Cheddar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Cebola Caramelizada&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Molho Barbecue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        hamburgueria<span class="token punctuation">.</span><span class="token function">addHamburguer</span><span class="token punctuation">(</span><span class="token string">&quot; Cheddar Tradicional Suino&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Suina&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Brioche&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Cheddar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Cebola Caramelizada&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Molho Barbecue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Hamburguer</span> hamburguer <span class="token operator">:</span> hamburgueria<span class="token punctuation">.</span><span class="token function">getHamburguers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            hamburguer<span class="token punctuation">.</span><span class="token function">prepararHamburguer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\\n---------------------------\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Total de hamburguers criados: &quot;</span> <span class="token operator">+</span> hamburgueria<span class="token punctuation">.</span><span class="token function">getHamburguers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Hamburguer</span><span class="token punctuation">&gt;</span></span> flyweights <span class="token operator">=</span> hamburguerFlyweightFactory<span class="token punctuation">.</span><span class="token function">getHamburguerFlyweights</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Hamburguer</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> flyweights<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Flyweight hamburguer tipo: &quot;</span> <span class="token operator">+</span> entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\\n---------------------------\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Total de tipos de Flyweights criados: &quot;</span> <span class="token operator">+</span> <span class="token class-name">HamburguerFlyweightFactory</span><span class="token punctuation">.</span><span class="token function">getHamburguerFlyweights</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="usos-conhecidos" tabindex="-1"><a class="header-anchor" href="#usos-conhecidos"><span>Usos conhecidos</span></a></h2><ul><li><p>Objetos em jogos, na maioria dos jogos os objetos tem caracteristicas semelhantes, então o padrão pode ser utilizado para compartilhar informações comuns entre esses objetos.</p></li><li><p>Frameworks de UI, alguns elementos da interface, como botões, podem compartilhar caracteristicas comuns, como o estilo.</p></li></ul><hr><h2 id="padroes-relacionados" tabindex="-1"><a class="header-anchor" href="#padroes-relacionados"><span>Padrões relacionados</span></a></h2><p><sup class="footnote-ref"><a href="#footnote1">[1:3]</a><a class="footnote-anchor" id="footnote-ref1:3"></a></sup> [Composite]: O padrão Flyweight é freqüentemente combinado com o padrão Composite para implementar uma estrutura hierárquica lógica em termos de um gráfico acíclico direcionado com nós de folhas compartilhados. [Strategy &amp; State]: Frequentemente é melhor implementar objetos State e Strategy como flyweights.</p><hr><h2 id="referencias" tabindex="-1"><a class="header-anchor" href="#referencias"><span>Referências</span></a></h2><ul><li>Otávio Miranda - Flyweight Teoria - Padrões de Projeto - Parte 25/45 - https://www.youtube.com/watch?v=WPQa64bdQbk</li><li>Otávio Miranda - Flyweight Prática - Padrões de Projeto - Parte 26/45 - https://www.youtube.com/watch?v=GZdRKXyZcbo</li><li>Refactoring Guru - https://refactoring.guru/pt-br/design-patterns/flyweight</li></ul><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>Gamma Erich - Padrões de Projetos - Soluções Reutilizáveis <a href="#footnote-ref1" class="footnote-backref">↩︎</a> <a href="#footnote-ref1:1" class="footnote-backref">↩︎</a> <a href="#footnote-ref1:2" class="footnote-backref">↩︎</a> <a href="#footnote-ref1:3" class="footnote-backref">↩︎</a></p></li><li id="footnote2" class="footnote-item"><p>K19 - Design Patterns em Java <a href="#footnote-ref2" class="footnote-backref">↩︎</a> <a href="#footnote-ref2:1" class="footnote-backref">↩︎</a></p></li></ol></section>`,105)]))}const g=o(u,[["render",r],["__file","index.html.vue"]]),b=JSON.parse('{"path":"/includes/seminario-2-LuisMiguelADS/","title":"Flyweight","lang":"pt-BR","frontmatter":{"description":"Flyweight Intenção Usar compartilhamento para suportar eficientemente grandes quantidades de objetos de granularidade fina.[1] Compartilhar, de forma eficiente, objetos que são ...","head":[["meta",{"property":"og:url","content":"https://20241-ifba-saj-ads-ppr.github.io/blog-material-aula/blog-material-aula/includes/seminario-2-LuisMiguelADS/"}],["meta",{"property":"og:site_name","content":"20241 PPR Blog das Aulas"}],["meta",{"property":"og:title","content":"Flyweight"}],["meta",{"property":"og:description","content":"Flyweight Intenção Usar compartilhamento para suportar eficientemente grandes quantidades de objetos de granularidade fina.[1] Compartilhar, de forma eficiente, objetos que são ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"pt-BR"}],["meta",{"property":"article:author","content":"Leandro Souza"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Flyweight\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Leandro Souza\\",\\"url\\":\\"https://github.com/leandro-costa\\"}]}"]]},"headers":[{"level":2,"title":"Intenção","slug":"intencao","link":"#intencao","children":[]},{"level":2,"title":"Também conhecido como","slug":"tambem-conhecido-como","link":"#tambem-conhecido-como","children":[]},{"level":2,"title":"Motivação","slug":"motivacao","link":"#motivacao","children":[{"level":3,"title":"GOF","slug":"gof","link":"#gof","children":[]},{"level":3,"title":"K19","slug":"k19","link":"#k19","children":[]}]},{"level":2,"title":"Aplicabilidade","slug":"aplicabilidade","link":"#aplicabilidade","children":[]},{"level":2,"title":"Estrutura","slug":"estrutura","link":"#estrutura","children":[]},{"level":2,"title":"Colaborações","slug":"colaboracoes","link":"#colaboracoes","children":[]},{"level":2,"title":"Consequências","slug":"consequencias","link":"#consequencias","children":[]},{"level":2,"title":"Implementação","slug":"implementacao-2","link":"#implementacao-2","children":[]},{"level":2,"title":"Meu exemplo de código","slug":"meu-exemplo-de-codigo","link":"#meu-exemplo-de-codigo","children":[{"level":3,"title":"Versão 1","slug":"versao-1","link":"#versao-1","children":[]},{"level":3,"title":"Versão 2","slug":"versao-2","link":"#versao-2","children":[]}]},{"level":2,"title":"Usos conhecidos","slug":"usos-conhecidos","link":"#usos-conhecidos","children":[]},{"level":2,"title":"Padrões relacionados","slug":"padroes-relacionados","link":"#padroes-relacionados","children":[]},{"level":2,"title":"Referências","slug":"referencias","link":"#referencias","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":9.22,"words":2767},"filePathRelative":"includes/seminario-2-LuisMiguelADS/README.md","autoDesc":true}');export{g as comp,b as data};

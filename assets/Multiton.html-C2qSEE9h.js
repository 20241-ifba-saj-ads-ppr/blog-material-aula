import{_ as p}from"./EstruturaMultiton-BsO-1dE9.js";import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as u,c as r,b as n,d as c,e as s,a as e}from"./app-DId127HP.js";const d={},m={href:"https://github.com/GuiSamp",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/RiansFonseca",target:"_blank",rel:"noopener noreferrer"};function v(g,a){const t=i("ExternalLinkIcon"),o=i("Mermaid");return u(),r("div",null,[a[2]||(a[2]=n("h1",{id:"multiton",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#multiton"},[n("span",null,"Multiton")])],-1)),a[3]||(a[3]=n("h2",{id:"guilherme-sampaio-oliveira-20221tadssaj0011",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#guilherme-sampaio-oliveira-20221tadssaj0011"},[n("span",null,"Guilherme Sampaio Oliveira (20221TADSSAJ0011)")])],-1)),n("p",null,[n("a",m,[a[0]||(a[0]=c("@GuiSamp")),s(t)])]),a[4]||(a[4]=e('<h1 id="multiton-criacao-de-objetos" tabindex="-1"><a class="header-anchor" href="#multiton-criacao-de-objetos"><span>Multiton: Criação de Objetos</span></a></h1><h2 id="intencao" tabindex="-1"><a class="header-anchor" href="#intencao"><span>Intenção</span></a></h2><p>Garantir que uma classe tenha um número fixo de instâncias e fornecer um ponto global de acesso para essas instâncias.</p><h2 id="tambem-conhecido-como" tabindex="-1"><a class="header-anchor" href="#tambem-conhecido-como"><span>Também conhecido como</span></a></h2><ul><li>Fixed instance pool</li><li>Named instance</li></ul><h2 id="motivacao" tabindex="-1"><a class="header-anchor" href="#motivacao"><span>Motivação</span></a></h2><p>O padrão Multiton é útil quando é necessário gerenciar múltiplas instâncias de uma classe, mas o número de instâncias deve ser limitado e controlado. Por exemplo, considere uma aplicação que precisa gerenciar conexões a vários bancos de dados diferentes. Embora você queira limitar o número de instâncias de conexões a um banco específico, deseja garantir que a mesma instância seja reutilizada para uma conexão específica.</p><p>Como garantir que o número de instâncias seja limitado e acessível globalmente? O padrão Multiton mantém um mapa de instâncias gerenciadas, garantindo que cada instância seja criada e acessada de acordo com uma chave única.</p><h2 id="aplicabilidade" tabindex="-1"><a class="header-anchor" href="#aplicabilidade"><span>Aplicabilidade</span></a></h2><p>Use o padrão Multiton quando:</p><ul><li>For preciso haver um número fixo e conhecido de instâncias de uma classe.</li><li>Você precisar acessar essas instâncias globalmente através de uma chave ou identificador.</li></ul><h2 id="estrutura" tabindex="-1"><a class="header-anchor" href="#estrutura"><span>Estrutura</span></a></h2><figure><img src="'+p+`" alt="Estrutura Multiton" tabindex="0" loading="lazy"><figcaption>Estrutura Multiton</figcaption></figure><h2 id="participantes" tabindex="-1"><a class="header-anchor" href="#participantes"><span>Participantes</span></a></h2><ul><li><strong>Multiton</strong><ul><li>Define uma operação <code>getInstance</code> que permite acessar instâncias específicas através de uma chave. Cada chave corresponde a uma única instância.</li><li>Gerencia um mapa de instâncias para garantir que cada chave tenha uma única instância associada.</li></ul></li></ul><h2 id="colaboracoes" tabindex="-1"><a class="header-anchor" href="#colaboracoes"><span>Colaborações</span></a></h2><ul><li>Os clientes acessam uma instância <code>Multiton</code> através da operação <code>getInstance</code> passando uma chave única.</li></ul><h2 id="consequencias" tabindex="-1"><a class="header-anchor" href="#consequencias"><span>Consequências</span></a></h2><p>O padrão Multiton apresenta vários benefícios:</p><ol><li><strong>Controle sobre o número de instâncias:</strong> Permite controlar e limitar o número de instâncias de uma classe, assegurando que apenas instâncias necessárias sejam criadas.</li><li><strong>Acesso global e controlado:</strong> Facilita o acesso a instâncias específicas através de uma chave, evitando a criação de instâncias desnecessárias.</li><li><strong>Reuso de instâncias:</strong> Garante que instâncias para uma chave específica sejam reutilizadas, evitando a criação de múltiplas instâncias para a mesma chave.</li></ol><h2 id="implementacao" tabindex="-1"><a class="header-anchor" href="#implementacao"><span>Implementação</span></a></h2><ol><li><p><strong>Gerenciamento de instâncias:</strong> O padrão Multiton utiliza um mapa para gerenciar instâncias, garantindo que apenas uma instância seja criada para cada chave.</p></li><li><p><strong>Inicialização da Instância:</strong> A primeira vez que um cliente solicita uma instância com uma chave específica, uma nova instância é criada e adicionada ao mapa. Instâncias subsequentes para a mesma chave retornam a instância existente no mapa.</p></li><li><p><strong>Construtor Privado:</strong> O construtor da classe é privado para evitar a criação de instâncias fora da classe. Isso garante que as instâncias só possam ser criadas e gerenciadas pela própria classe Multiton.</p></li><li><p><strong>Gerenciamento de Chaves:</strong> As chaves usadas para acessar as instâncias devem ser únicas e bem definidas. O mapa associa cada chave a uma única instância, permitindo o acesso controlado às instâncias.</p></li><li><p><strong>Sincronização:</strong> Em aplicações multi-threaded, é importante garantir que o método que cria instâncias seja thread-safe. Isso pode ser feito sincronizando o bloco de código que cria novas instâncias ou usando outras técnicas de sincronização.</p></li></ol><h2 id="exemplos" tabindex="-1"><a class="header-anchor" href="#exemplos"><span>Exemplos</span></a></h2><h3 id="java-design-patterns" tabindex="-1"><a class="header-anchor" href="#java-design-patterns"><span>Java Design Patterns</span></a></h3><pre><code>public enum NazgulName {
KHAMUL, MURAZOR, DWAR, JI_INDUR, AKHORAHIL, HOARMURATH, ADUNAPHEL, REN, UVATHA
}

public final class Nazgul {
  private static final Map&lt;NazgulName, Nazgul&gt; nazguls;

  @Getter
  private final NazgulName name;

  static {
      nazguls = new ConcurrentHashMap&lt;&gt;();
      nazguls.put(NazgulName.KHAMUL, new Nazgul(NazgulName.KHAMUL));
      nazguls.put(NazgulName.MURAZOR, new Nazgul(NazgulName.MURAZOR));
      nazguls.put(NazgulName.DWAR, new Nazgul(NazgulName.DWAR));
      nazguls.put(NazgulName.JI_INDUR, new Nazgul(NazgulName.JI_INDUR));
      nazguls.put(NazgulName.AKHORAHIL, new Nazgul(NazgulName.AKHORAHIL));
      nazguls.put(NazgulName.HOARMURATH, new Nazgul(NazgulName.HOARMURATH));
      nazguls.put(NazgulName.ADUNAPHEL, new Nazgul(NazgulName.ADUNAPHEL));
      nazguls.put(NazgulName.REN, new Nazgul(NazgulName.REN));
      nazguls.put(NazgulName.UVATHA, new Nazgul(NazgulName.UVATHA));
  }

  private Nazgul(NazgulName name) {
      this.name = name;
  }

  public static Nazgul getInstance(NazgulName name) {
      return nazguls.get(name);
  }
}

public static void main(String[] args) {
  LOGGER.info(&quot;Printing out eagerly initialized multiton contents&quot;);
  LOGGER.info(&quot;KHAMUL={}&quot;, Nazgul.getInstance(NazgulName.KHAMUL));
  LOGGER.info(&quot;MURAZOR={}&quot;, Nazgul.getInstance(NazgulName.MURAZOR));
  LOGGER.info(&quot;DWAR={}&quot;, Nazgul.getInstance(NazgulName.DWAR));
  LOGGER.info(&quot;JI_INDUR={}&quot;, Nazgul.getInstance(NazgulName.JI_INDUR));
  LOGGER.info(&quot;AKHORAHIL={}&quot;, Nazgul.getInstance(NazgulName.AKHORAHIL));
  LOGGER.info(&quot;HOARMURATH={}&quot;, Nazgul.getInstance(NazgulName.HOARMURATH));
  LOGGER.info(&quot;ADUNAPHEL={}&quot;, Nazgul.getInstance(NazgulName.ADUNAPHEL));
  LOGGER.info(&quot;REN={}&quot;, Nazgul.getInstance(NazgulName.REN));
  LOGGER.info(&quot;UVATHA={}&quot;, Nazgul.getInstance(NazgulName.UVATHA));

  // enum multiton
  LOGGER.info(&quot;Printing out enum-based multiton contents&quot;);
  LOGGER.info(&quot;KHAMUL={}&quot;, NazgulEnum.KHAMUL);
  LOGGER.info(&quot;MURAZOR={}&quot;, NazgulEnum.MURAZOR);
  LOGGER.info(&quot;DWAR={}&quot;, NazgulEnum.DWAR);
  LOGGER.info(&quot;JI_INDUR={}&quot;, NazgulEnum.JI_INDUR);
  LOGGER.info(&quot;AKHORAHIL={}&quot;, NazgulEnum.AKHORAHIL);
  LOGGER.info(&quot;HOARMURATH={}&quot;, NazgulEnum.HOARMURATH);
  LOGGER.info(&quot;ADUNAPHEL={}&quot;, NazgulEnum.ADUNAPHEL);
  LOGGER.info(&quot;REN={}&quot;, NazgulEnum.REN);
  LOGGER.info(&quot;UVATHA={}&quot;, NazgulEnum.UVATHA);
}
</code></pre><h3 id="meu-exemplo" tabindex="-1"><a class="header-anchor" href="#meu-exemplo"><span>Meu Exemplo</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">TipoVeiculo</span> <span class="token punctuation">{</span>
    <span class="token function">CARRO</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&quot;Gasolina&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">MOTO</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;Gasolina&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">ONIBUS</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token string">&quot;Diesel&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">BICICLETA</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;Manual&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> numeroRodas<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> capacidadePassageiros<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> tipoCombustivel<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">TipoVeiculo</span><span class="token punctuation">(</span><span class="token keyword">int</span> numeroRodas<span class="token punctuation">,</span> <span class="token keyword">int</span> capacidadePassageiros<span class="token punctuation">,</span> <span class="token class-name">String</span> tipoCombustivel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>numeroRodas <span class="token operator">=</span> numeroRodas<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>capacidadePassageiros <span class="token operator">=</span> capacidadePassageiros<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>tipoCombustivel <span class="token operator">=</span> tipoCombustivel<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getNumeroRodas</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> numeroRodas<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getCapacidadePassageiros</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> capacidadePassageiros<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getTipoCombustivel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> tipoCombustivel<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TipoVeiculo</span> veiculo <span class="token operator">:</span> <span class="token class-name">TipoVeiculo</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Tipo de Veículo: &quot;</span> <span class="token operator">+</span> veiculo<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Número de Rodas: &quot;</span> <span class="token operator">+</span> veiculo<span class="token punctuation">.</span><span class="token function">getNumeroRodas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Capacidade de Passageiros: &quot;</span> <span class="token operator">+</span> veiculo<span class="token punctuation">.</span><span class="token function">getCapacidadePassageiros</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Tipo de Combustível: &quot;</span> <span class="token operator">+</span> veiculo<span class="token punctuation">.</span><span class="token function">getTipoCombustivel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27)),s(o,{id:"mermaid-163",code:"eJytkkELgkAQhe/+ij0a1R+ICHTrIJSGWpfoMOmyDOiu7K5dov+eq6BZHp3T8t7je7MwWQFa7xG4gtIhzbQCSbGSV4ZZXUjyanU72y0TdckUGJRit+v1JfXiOHJRGNL6MpY56BWxQgYVZJhDzs4NGDhDJRsrMQoFJ6bpobJ81NrgkxWLAXmK0pmJURj4l2Reph/QgB4PqTcrtn+sf6hjY5I+RKZb/kuWnJlw6HAXG7v7yKZTTVNBezdfZTbSrTGkSkDhduLtTkBx3X387TgfIR3Olg=="}),a[5]||(a[5]=n("h2",{id:"rian-silva-da-fonseca-20221tadssaj0002",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rian-silva-da-fonseca-20221tadssaj0002"},[n("span",null,"Rian Silva da Fonseca (20221TADSSAJ0002)")])],-1)),n("p",null,[n("a",k,[a[1]||(a[1]=c("@RiansFonseca")),s(t)])]),a[6]||(a[6]=e('<h1 id="intencao-1" tabindex="-1"><a class="header-anchor" href="#intencao-1"><span>Intenção</span></a></h1><p>O principal propósito de usar o padrão multiton é garantir que você tenha um número limitado de instâncias de uma classe, e que cada instância tenha um identificador exclusivo.</p><h1 id="motivacao-1" tabindex="-1"><a class="header-anchor" href="#motivacao-1"><span>Motivação</span></a></h1><p>A motivação para o padrão Multiton surge da necessidade de gerenciar um número limitado e fixo de recursos. Em cenários onde múltiplas instâncias de um recurso específico são necessárias, mas cada instância deve ser única e acessível globalmente através de um identificador exclusivo, o Multiton se torna uma solução viável.</p><p>Por exemplo, em uma aplicação que precisa lidar com diferentes ambientes de banco de dados (desenvolvimento, teste, produção), cada ambiente pode ser representado por uma instância única do Multiton. Cada instância é identificada por um nome ou ID específico, permitindo que o sistema mantenha uma única conexão ativa para cada ambiente de banco de dados, otimizando assim o uso de recursos e garantindo consistência nas configurações e conexões utilizadas.</p><h1 id="aplicabilidade-1" tabindex="-1"><a class="header-anchor" href="#aplicabilidade-1"><span>Aplicabilidade</span></a></h1><p>Use o padrão Multiton quando:</p><ul><li>É necessário ter uma quantidade limitada de instâncias de uma classe, cada uma associada a um identificador único.</li><li>Deseja-se acessar globalmente essas instâncias através de um método estático.</li></ul><h1 id="estrutura-1" tabindex="-1"><a class="header-anchor" href="#estrutura-1"><span>Estrutura</span></a></h1>',9)),s(o,{id:"mermaid-208",code:"eJxLzkksLnbJTEwvSszlUgACsICCb2lOSWZJfp5CNVgQBHQViksSSzKTFTLzgIy85MzEYisF38QCm+CSosy8dB24HjskLTAxDU24oDbMnPTUEk+IUakaEDM0gQZCNSApzy9ILUpMTszXAEqX5WemgKVquQAFfTfB"}),a[7]||(a[7]=e(`<h1 id="participantes-1" tabindex="-1"><a class="header-anchor" href="#participantes-1"><span>Participantes</span></a></h1><h2 id="multiton-classe" tabindex="-1"><a class="header-anchor" href="#multiton-classe"><span>Multiton (Classe)</span></a></h2><p>Define uma classe que permite a criação de uma quantidade limitada de instâncias e fornece um método estático para recuperá-las. A chave (Key) é usada para identificar cada instância.</p><h2 id="key-chave" tabindex="-1"><a class="header-anchor" href="#key-chave"><span>Key (Chave)</span></a></h2><p>Define uma chave que identifica cada instância do Multiton. Pode conter atributos relevantes para distinguir entre diferentes instâncias.</p><h1 id="colaboracoes-1" tabindex="-1"><a class="header-anchor" href="#colaboracoes-1"><span>Colaborações</span></a></h1><ul><li><p>No geral, o padrão multiton pode ser uma ferramenta útil na programação orientada a objetos, especialmente quando usado em combinação com outros padrões de design. Por “combinação com outros padrões de design”, quero dizer que o padrão multiton pode ser usado em conjunto com outros padrões de design para atingir um objetivo de design específico.</p></li><li><p>Por exemplo, o padrão multiton pode ser usado em combinação com o padrão factory para criar uma factory que produz instâncias multiton. Isso pode ser útil em casos em que você deseja criar um número limitado de instâncias de uma classe, mas deseja a flexibilidade para criar diferentes tipos de instâncias com base em uma entrada específica. O padrão multiton também pode ser usado em combinação com o padrão prototype, onde as instâncias multiton servem como protótipos para criar novos objetos. Isso pode ser útil em casos em que você deseja criar várias instâncias de uma classe com características semelhantes, mas não deseja criá-las do zero todas as vezes.</p></li></ul><h1 id="consequencias-1" tabindex="-1"><a class="header-anchor" href="#consequencias-1"><span>Consequências</span></a></h1><p>O padrão multiton oferece diversos benefícios:</p><ol><li><p><strong>Limitação do número de instâncias:</strong> Permite que você restrinja o número de instâncias de uma classe, enquanto ainda permite múltiplas instâncias. Isso é útil em situações onde um singleton seria muito restritivo, mas você não precisa de um número ilimitado de instâncias.</p></li><li><p><strong>Acesso fácil a instâncias específicas:</strong> Facilita o acesso a instâncias específicas de uma classe usando um identificador exclusivo. Isso é particularmente útil quando você precisa realizar operações em uma instância específica, em vez de afetar todas as instâncias da classe.</p></li><li><p><strong>Melhoria de desempenho:</strong> Melhora o desempenho do aplicativo ao reutilizar instâncias existentes em vez de criar novas. Isso é vantajoso em cenários onde a criação de novas instâncias é custosa em termos de recursos como memória e processamento.</p></li><li><p><strong>Reforço do princípio de responsabilidade única:</strong> Facilita a criação de instâncias separadas para diferentes tarefas ou responsabilidades, o que pode simplificar o design e a manutenção de sistemas complexos.</p></li><li><p><strong>Facilitação de testes:</strong> Facilita os testes de aplicativos ao permitir a criação de instâncias específicas de uma classe com estados conhecidos, facilitando o teste de comportamentos específicos.</p></li></ol><h1 id="implementacao-1" tabindex="-1"><a class="header-anchor" href="#implementacao-1"><span>Implementação</span></a></h1><p>Aqui está uma implementação genérica do padrão Multiton em Java. O método <code>getInstance(String chave)</code> retorna a instância correspondente à chave fornecida.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Multiton</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Multiton</span><span class="token punctuation">&gt;</span></span> instancias <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Multiton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Construtor privado para impedir a criação de instâncias fora da classe</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Multiton</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token class-name">String</span> chave<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>instancias<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>chave<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            instancias<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>chave<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Multiton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> instancias<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>chave<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operacao</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Executando operação no Multiton...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="exemplo-de-codigo" tabindex="-1"><a class="header-anchor" href="#exemplo-de-codigo"><span>Exemplo de código</span></a></h1><p>Gerenciamento de Recursos de Hardware Em sistemas que precisam interagir com recursos de hardware específicos, como impressoras, sensores, ou dispositivos IoT, o padrão Multiton pode ser útil para gerenciar as instâncias desses recursos de forma eficiente.</p><h3 id="classe-hardware-manager-gerenciador" tabindex="-1"><a class="header-anchor" href="#classe-hardware-manager-gerenciador"><span>Classe Hardware Manager (Gerenciador)</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HardwareManager</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">HardwareDevice</span><span class="token punctuation">&gt;</span></span> devices <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">HardwareManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Construtor privado para evitar instanciação direta</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">HardwareDevice</span> <span class="token function">getDevice</span><span class="token punctuation">(</span><span class="token class-name">String</span> deviceId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>devices<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>deviceId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            devices<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>deviceId<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HardwareDevice</span><span class="token punctuation">(</span>deviceId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> devices<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>deviceId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="classe-hardware-device-dispositivo-gerenciado" tabindex="-1"><a class="header-anchor" href="#classe-hardware-device-dispositivo-gerenciado"><span>Classe Hardware Device (Dispositivo gerenciado)</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">HardwareDevice</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> deviceId<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">HardwareDevice</span><span class="token punctuation">(</span><span class="token class-name">String</span> deviceId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>deviceId <span class="token operator">=</span> deviceId<span class="token punctuation">;</span>
        <span class="token comment">// Inicialização do dispositivo</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">performOperation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Executando operação no dispositivo &quot;</span> <span class="token operator">+</span> deviceId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="usos-conhecidos" tabindex="-1"><a class="header-anchor" href="#usos-conhecidos"><span>Usos Conhecidos</span></a></h1><p>O padrão Multiton é aplicado para gerenciar múltiplas instâncias únicas de uma classe, cada uma identificada por um identificador exclusivo. Alguns exemplos típicos de uso incluem:</p><ul><li><p><strong>Temas de Interface de Usuário:</strong> Utilizado para gerenciar diferentes estilos visuais da interface, onde cada tema é uma instância única acessível globalmente por um nome ou ID específico.</p></li><li><p><strong>Pools de Conexão:</strong> Empregado para controlar pools de conexão com bancos de dados ou serviços externos, onde cada pool é acessado de maneira exclusiva por um identificador único. Isso otimiza o uso de recursos ao garantir que cada conexão seja reutilizável e gerenciável de forma centralizada.</p></li><li><p><strong>Configurações de Aplicação:</strong> Usado na gestão de configurações específicas da aplicação, como ambientes de desenvolvimento, teste e produção. O Multiton garante acesso único e consistente às configurações necessárias para cada ambiente, facilitando a manutenção e garantindo a integridade das configurações em diferentes cenários.</p></li></ul><h2 id="leandro" tabindex="-1"><a class="header-anchor" href="#leandro"><span>Leandro</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>
<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">Configuracao</span> <span class="token punctuation">{</span>
    <span class="token function">localDb</span><span class="token punctuation">(</span><span class="token string">&quot;jdbc:mysql://localhost:3306/meuBanco&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;senha123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">remotoDb</span><span class="token punctuation">(</span><span class="token string">&quot;jdbc:mysql://remotehost:3306/outroBanco&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;root&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;rootpassword&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> urlBancoDeDados<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> usuario<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> senha<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Configuracao</span><span class="token punctuation">(</span><span class="token class-name">String</span> urlBancoDeDados<span class="token punctuation">,</span> <span class="token class-name">String</span> usuario<span class="token punctuation">,</span><span class="token class-name">String</span> senha<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>urlBancoDeDados <span class="token operator">=</span> urlBancoDeDados<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>usuario <span class="token operator">=</span> usuario<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>senha <span class="token operator">=</span> senha<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getSenha</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> senha<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getUrlBancoDeDados</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> urlBancoDeDados<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getUsuario</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> usuario<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Configuracao</span><span class="token punctuation">.</span>localDb<span class="token punctuation">.</span><span class="token function">getSenha</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24))])}const N=l(d,[["render",v],["__file","Multiton.html.vue"]]),q=JSON.parse('{"path":"/posts/Seminarios/seminario-1/Multiton.html","title":"Multiton","lang":"pt-BR","frontmatter":{"icon":"edit","date":"2024-07-25T23:10:00.000Z","tag":["Multiton","gof"],"category":["seminario-1"],"order":10,"excerpt":"Apresentação do Padrão de Projeto Multiton","author":"GuiSamp, RiansFonseca","gitInclude":["../../../../src/includes/seminario-1-GuiSamp/Multiton.md","../../../../src/includes/seminario-1-RiansFonseca/README-MULTITON.md"],"description":"Multiton Guilherme Sampaio Oliveira (20221TADSSAJ0011) @GuiSamp Multiton: Criação de Objetos Intenção Garantir que uma classe tenha um número fixo de instâncias e fornecer um po...","head":[["meta",{"property":"og:url","content":"https://20241-ifba-saj-ads-ppr.github.io/blog-material-aula/blog-material-aula/posts/Seminarios/seminario-1/Multiton.html"}],["meta",{"property":"og:site_name","content":"20241 PPR Blog das Aulas"}],["meta",{"property":"og:title","content":"Multiton"}],["meta",{"property":"og:description","content":"Multiton Guilherme Sampaio Oliveira (20221TADSSAJ0011) @GuiSamp Multiton: Criação de Objetos Intenção Garantir que uma classe tenha um número fixo de instâncias e fornecer um po..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"pt-BR"}],["meta",{"property":"og:updated_time","content":"2024-09-12T22:25:03.000Z"}],["meta",{"property":"article:author","content":"GuiSamp, RiansFonseca"}],["meta",{"property":"article:tag","content":"Multiton"}],["meta",{"property":"article:tag","content":"gof"}],["meta",{"property":"article:published_time","content":"2024-07-25T23:10:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-12T22:25:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Multiton\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-25T23:10:00.000Z\\",\\"dateModified\\":\\"2024-09-12T22:25:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GuiSamp, RiansFonseca\\"}]}"]]},"headers":[{"level":2,"title":"Guilherme Sampaio Oliveira (20221TADSSAJ0011)","slug":"guilherme-sampaio-oliveira-20221tadssaj0011","link":"#guilherme-sampaio-oliveira-20221tadssaj0011","children":[]},{"level":2,"title":"Intenção","slug":"intencao","link":"#intencao","children":[]},{"level":2,"title":"Também conhecido como","slug":"tambem-conhecido-como","link":"#tambem-conhecido-como","children":[]},{"level":2,"title":"Motivação","slug":"motivacao","link":"#motivacao","children":[]},{"level":2,"title":"Aplicabilidade","slug":"aplicabilidade","link":"#aplicabilidade","children":[]},{"level":2,"title":"Estrutura","slug":"estrutura","link":"#estrutura","children":[]},{"level":2,"title":"Participantes","slug":"participantes","link":"#participantes","children":[]},{"level":2,"title":"Colaborações","slug":"colaboracoes","link":"#colaboracoes","children":[]},{"level":2,"title":"Consequências","slug":"consequencias","link":"#consequencias","children":[]},{"level":2,"title":"Implementação","slug":"implementacao","link":"#implementacao","children":[]},{"level":2,"title":"Exemplos","slug":"exemplos","link":"#exemplos","children":[{"level":3,"title":"Java Design Patterns","slug":"java-design-patterns","link":"#java-design-patterns","children":[]},{"level":3,"title":"Meu Exemplo","slug":"meu-exemplo","link":"#meu-exemplo","children":[]}]},{"level":2,"title":"Rian Silva da Fonseca (20221TADSSAJ0002)","slug":"rian-silva-da-fonseca-20221tadssaj0002","link":"#rian-silva-da-fonseca-20221tadssaj0002","children":[]},{"level":2,"title":"Multiton (Classe)","slug":"multiton-classe","link":"#multiton-classe","children":[]},{"level":2,"title":"Key (Chave)","slug":"key-chave","link":"#key-chave","children":[{"level":3,"title":"Classe Hardware Manager (Gerenciador)","slug":"classe-hardware-manager-gerenciador","link":"#classe-hardware-manager-gerenciador","children":[]},{"level":3,"title":"Classe Hardware Device (Dispositivo gerenciado)","slug":"classe-hardware-device-dispositivo-gerenciado","link":"#classe-hardware-device-dispositivo-gerenciado","children":[]}]},{"level":2,"title":"Leandro","slug":"leandro","link":"#leandro","children":[]}],"git":{"createdTime":1726179903000,"updatedTime":1726179903000,"contributors":[{"name":"leandro-costa","email":"leandro.costa@ifba.edu.br","commits":1}]},"readingTime":{"minutes":0.4,"words":120},"filePathRelative":"posts/Seminarios/seminario-1/Multiton.md","localizedDate":"25 de julho de 2024","autoDesc":true}');export{N as comp,q as data};

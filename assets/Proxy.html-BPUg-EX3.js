import{_ as e,a as o,b as t}from"./estrutura-aI3Ijlje.js";import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as s,d as p,e as r,a as l,o as u,r as d}from"./app-BrOvOMMH.js";const m={},k={href:"https://github.com/Redror",target:"_blank",rel:"noopener noreferrer"};function v(b,a){const n=d("ExternalLinkIcon");return u(),c("div",null,[a[1]||(a[1]=s("h1",{id:"proxy",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#proxy"},[s("span",null,"Proxy")])],-1)),a[2]||(a[2]=s("h2",{id:"pedro-carlos-de-gois-barros-santos-20221tadssaj0006",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#pedro-carlos-de-gois-barros-santos-20221tadssaj0006"},[s("span",null,"Pedro Carlos de Gois Barros Santos (20221TADSSAJ0006)")])],-1)),s("p",null,[s("a",k,[a[0]||(a[0]=p("@Redror")),r(n)])]),a[3]||(a[3]=l('<h1 id="padrao-proxy-pedro-carlos" tabindex="-1"><a class="header-anchor" href="#padrao-proxy-pedro-carlos"><span>Padrão Proxy - Pedro Carlos</span></a></h1><h2 id="intencao" tabindex="-1"><a class="header-anchor" href="#intencao"><span>Intenção</span></a></h2><p>Fornece um substituto (<em>surrogate</em>) ou marcador da localização de outro objeto para controlar o acesso a esse objeto.</p><h2 id="tambem-conhecido-como" tabindex="-1"><a class="header-anchor" href="#tambem-conhecido-como"><span>Também conhecido como</span></a></h2><p>Surrogate</p><h2 id="motivacao" tabindex="-1"><a class="header-anchor" href="#motivacao"><span>Motivação</span></a></h2><p>Uma razão para controlar o acesso a um objeto é adiar o custo integral de sua criação e inicialização até o momento em que realmente necessitamos usá-lo. Considere um editor de documentos que pode embutir objetos gráficos num documento. Alguns objetos gráficos, tais como grandes imagens “rasterizadas”, podem ser muito caros para serem criados. A abertura de documentos deveria ser rápida, assim, deveríamos evitar a criação, de uma só vez, de todos os objetos caros quando o documento é aberto. De qualquer forma, isso não é necessário porque nem todos esses objetos estarão visíveis no documento ao mesmo tempo. Uma razão para controlar o acesso a um objeto é adiar o custo integral de sua criação e inicialização até o momento em que realmente necessitamos usá-lo. Considere um editor de documentos que pode embutir objetos gráficos num documento. Alguns objetos gráficos, tais como grandes imagens “rasterizadas”, podem ser muito caros para serem criados. A abertura de documentos deveria ser rápida, assim, deveríamos evitar a criação, de uma só vez, de todos os objetos caros quando o documento é aberto. De qualquer forma, isso não é necessário porque nem todos esses objetos estarão visíveis no documento ao mesmo tempo.</p><p>Essas restrições sugerem a criação de tais objetos caros <em>sob demanda</em>, o que, neste caso, ocorre quando uma imagem se torna visível. Mas o que colocamos num documento no lugar da imagem? E como podemos ocultar o fato de que o objeto é criado sob demanda de maneira que não compliquemos a implementação do editor? Por exemplo, essa implementação não deveria produzir impacto sobre o código de apresentação e formatação.</p><p>A solução é usar outro objeto, um <strong>proxy</strong> (procurador), que funciona como um substituto temporário da imagem real. O proxy funciona exatamente como a imagem e toma conta da sua instanciação quando a mesma for necessária.</p><figure><img src="'+e+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>O proxy de imagem cria a imagem real somente quando o editor de documentos solicita ao mesmo exibir a si próprio invocando sua operação Draw. O proxy repassa as solicitações subseqüentes diretamente para a imagem. Portanto, ele deve manter uma referência para a imagem após criá-la.</p><p>Vamos assumir que as imagens são armazenadas em arquivos separados. Neste caso, podemos usar o nome do arquivo como referência para o objeto real. O proxy também armazena sua <strong>extensão</strong>, ou seja, sua largura e altura.</p><p>A extensão permite ao proxy esconder as solicitações sobre o seu tamanho, oriundas do formatador, sem ter que efetivamente instanciar a imagem. O seguinte diagrama de classe ilustra esse exemplo em mais detalhes.</p><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>O editor de documentos acessa as imagens embutidas através da interface definida pela classe abstrata Graphic. ImageProxy é uma classe para imagens que são criadas sob demanda. ImageProxy mantém o nome do arquivo como uma referência para a imagem no disco. O nome do arquivo é passado como um argumento para o constructor de ImageProxy. Um ImageProxy também armazena os limites da imagem (<em>extent</em>) e uma referência para a instância real de Image (<em>filename</em>). Essa referência não será válida até que o Proxy instancie a imagem real. A operação Draw garante que a imagem é instanciada antes de repassar a ela a solicitação. GetExtent repassa a solicitação para a imagem somente se ela estiver instanciada; caso contrário, ImageProxy retorna a extensão (<em>extent</em>) armazenada.</p><h2 id="aplicabilidade" tabindex="-1"><a class="header-anchor" href="#aplicabilidade"><span>Aplicabilidade</span></a></h2><p>O padrão Proxy é aplicável sempre que há necessidade de uma referência mais versátil, ou sofisticada, do que um simples apontador para um objeto. Aqui apresentamos diversas situações comuns nas quais o padrão Proxy é aplicável:</p><ol><li><p>Um <strong>remote proxy</strong> fornece um representante local para um objeto num espaço de endereçamento diferente. NEXTSTEP[Add94] usa a classe NXProxy para esta finalidade. Coplien [Cop92] chama este tipo de proxy de um “embaixador” (<em>ambassador</em>).</p></li><li><p>Um <strong>virtual proxy</strong> cria objetos caros sob demanda. O ImageProxy descrito na seção Motivação é um exemplo de um proxy deste tipo.</p></li><li><p>Um <strong>protection proxy</strong> controla o acesso ao objeto original. Os proxies de proteção são úteis quando os objetos devem ter diferentes direitos de acesso. Por exemplo, KernelProxies, no sistema operacional Choices [CIRM93], fornece um acesso protegido aos objetos do sistema operacional.</p></li><li><p>Um <strong>smart reference</strong> é um substituto para um simples <em>pointer</em> que executa ações adicionais quando um objeto é acessado. Usos típicos incluem:</p><ul><li>contar o número de referências para o objeto real, de modo que o mesmo possa ser liberado automaticamente quando não houver mais referências (também chamadas de <strong>smart pointers</strong> [Ede92]);</li><li>carregar um objeto persistente para a memória quando ele for referenciado pela primeira vez;</li><li>verificar se o objeto real está bloqueado antes de ser acessado, para assegurar que nenhum outro objeto possa mudá-lo.</li></ul></li></ol><h2 id="estrutura" tabindex="-1"><a class="header-anchor" href="#estrutura"><span>Estrutura</span></a></h2><figure><img src="'+t+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="participantes" tabindex="-1"><a class="header-anchor" href="#participantes"><span>Participantes</span></a></h2><ul><li><strong>Proxy</strong> (ImageProxy) <ul><li>mantém uma referência que permite ao proxy acessar o objeto real (<em>real subject</em>). O proxy pode referenciar um Subject se as interfaces de RealSubject e Subject forem as mesmas;</li><li>fornece uma interface idêntica a de Subject, de modo que o proxy possa substitur o objeto real (<em>real subject</em>).</li><li>controla o acesso ao objeto real e pode ser responsável pela sua criação e exclusão.</li><li>outras responsabilidades dependem do tipo de proxy: <ul><li><em>remote proxies</em> são responsáveis pela codificação de uma solicitação e de seus argumentos, bem como pelo envio da solicitação codificada para o objeto real num espaço de endereçamento diferente;</li><li><em>virtual proxies</em> podem manterinformações adicionais sobre o objeto real, de maneira que possam postergar o acesso ao mesmo. Por exemplo, o ImageProxy da seção Motivação armazena a extensão da imagem real;</li><li><em>protection proxies</em> verificam se quem chama tem as permissões de acesso requeridas para executar uma consulta.</li></ul></li></ul></li><li><strong>Subject</strong> (Graphic) <ul><li>define uma interface comum para RealSubject e Proxy, de maneira que um Proxy possa ser usado em qualquer lugar em que um RealSubject é esperado.</li></ul></li><li><strong>RealSubject</strong> (Image) <ul><li>Define o objeto real que o proxy representa.</li></ul></li></ul><h2 id="colaboracoes" tabindex="-1"><a class="header-anchor" href="#colaboracoes"><span>Colaborações</span></a></h2><ul><li>Dependendo de seu tipo, Proxy repassa solicitações para RealSubject quando apropriado.</li></ul><h2 id="consequencias" tabindex="-1"><a class="header-anchor" href="#consequencias"><span>Conseqüências</span></a></h2><p>O <em>padrão Proxy</em> introduz um nível de referência indireta no acesso a um objeto. A referência indireta adicional tem muitos usos, dependendo do tipo de proxy:</p><ol><li>Um proxy remoto pode ocultar o fato de que um objeto reside num espaço de endereçamento diferente.</li><li>Um proxy virtual pode executar otimizações, tais como a criação de um objeto sob demanda.</li><li>Tanto proxies de proteção como smart references permitem tarefas adicionais de organização (<em>housekeeping</em>) quando um objeto é acessado.</li></ol><p>Existe uma outra otimização que o padrão Proxy pode ocultar do cliente. Chamada de <strong>copy-on-write</strong>, está relacionada à criação de um objeto sob demanda. Copiar um objeto grande e complicado pode ser uma operação cara do ponto de vista computacional. Se a cópia nunca é modificada, então não há necessidade de incorrer neste custo. Pela utilização de um proxy para postergar o processo de cópia, garantimos que pagamos o preço da cópia do objeto somente se ele for modificado. Para <em>copy-on-write</em> funcionar, o <em>objeto</em> deve ter suas referências contadas. Copiar o proxy não fará nada mais do que incrementar esta contagem de referências. Somente quando o cliente solicita uma operação que modifica o <em>objeto</em>, o proxy realmente o copia. Nesse caso, o proxy também deve diminuir a contagem de referências do <em>objeto</em>. Quando a contagem de referências se torna zero, o <em>objeto</em> é deletado. A abordagem <em>copy-on-write</em> pode reduzir significativamente o custo computacional da cópia de <em>objetos</em> muito pesados.</p><h2 id="exemplo-de-codigo" tabindex="-1"><a class="header-anchor" href="#exemplo-de-codigo"><span>Exemplo de Código</span></a></h2><h3 id="refactory-guru" tabindex="-1"><a class="header-anchor" href="#refactory-guru"><span>Refactory Guru</span></a></h3><p>Este exemplo ilustra como o padrão Proxy pode ajudar a introduzir a inicialização preguiçosa e o cache em uma biblioteca de integração com o YouTube de terceiros.</p><figure><img src="https://www.plantuml.com/plantuml/svg/lLB12i8m3BttAthSaFw0Y0mzY0TlG_2OjPa6PWDj9uBwxswpUb4hWjX36rxxylAI5Zw02-s-4SKZ8XlGrQ1HpgXgY0Dgs71RjXMMw3IIOozFGdPh91lgUMioo3xB8yXLbs5fQnxmZCpzeW8wnjS3UX52D-2zdFSx_bLb3dg7KK59Z-v0ciS9pp7xSvBCfsZvRpqiqA7L18PTL18Y1Ykmi4KdbPgcR2IcEZahzMOMtz66leWN_UOFnOa2hHd-u-sy0W00" alt="uml diagram" loading="lazy"><figcaption>Estrutura Código Rectory Guru.</figcaption></figure><p>A biblioteca nos fornece a classe de download de vídeos. No entanto, ela é muito ineficiente. Se o aplicativo cliente solicitar o mesmo vídeo várias vezes, a biblioteca simplesmente o baixa repetidamente, em vez de armazená-lo em cache e reutilizar o primeiro arquivo baixado. A classe proxy implementa a mesma interface do downloader original e delega todo o trabalho a ele. No entanto, ela mantém o controle dos arquivos baixados e retorna o resultado em cache quando o aplicativo solicita o mesmo vídeo várias vezes.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// A interface de um serviço remoto.</span>
<span class="token keyword">interface</span> <span class="token class-name">BibliotecaYouTubeTerceirizada</span> <span class="token punctuation">{</span>
    method <span class="token function">listarVideos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    method <span class="token function">obterInfoVideo</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    method <span class="token function">baixarVideo</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// A implementação concreta de um conector de serviço. Os métodos</span>
<span class="token comment">// desta classe podem solicitar informações do YouTube. A velocidade</span>
<span class="token comment">// da solicitação depende da conexão de internet do usuário e do YouTube.</span>
<span class="token comment">// O aplicativo pode ficar mais lento se várias solicitações forem feitas</span>
<span class="token comment">// ao mesmo tempo, mesmo se todas solicitarem as mesmas informações.</span>
<span class="token keyword">class</span> <span class="token class-name">YouTubeTerceirizado</span> <span class="token keyword">implements</span> <span class="token class-name">BibliotecaYouTubeTerceirizada</span> <span class="token punctuation">{</span>
    method <span class="token function">listarVideos</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Enviar uma solicitação de API para o YouTube.</span>
    <span class="token punctuation">}</span>

    method <span class="token function">obterInfoVideo</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Obter metadados sobre um vídeo.</span>
    <span class="token punctuation">}</span>

    method <span class="token function">baixarVideo</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Baixar um arquivo de vídeo do YouTube.</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Para economizar banda, podemos armazenar em cache os resultados das solicitações</span>
<span class="token comment">// e mantê-los por um tempo. Mas pode ser impossível colocar tal código diretamente</span>
<span class="token comment">// na classe de serviço. Por exemplo, ela pode ter sido fornecida como parte de uma</span>
<span class="token comment">// biblioteca de terceiros e/ou definida como \`final\`. É por isso que colocamos o</span>
<span class="token comment">// código de cache em uma nova classe proxy que implementa a mesma interface que</span>
<span class="token comment">// a classe de serviço. Ela delega ao objeto de serviço apenas quando as solicitações</span>
<span class="token comment">// reais precisam ser enviadas.</span>
<span class="token keyword">class</span> <span class="token class-name">YouTubeCache</span> <span class="token keyword">implements</span> <span class="token class-name">BibliotecaYouTubeTerceirizada</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">ThirdPartyYouTubeLib</span> servico<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> listCache<span class="token punctuation">,</span> videoCache<span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> precisaResetar<span class="token punctuation">;</span>

    <span class="token class-name">YouTubeCache</span><span class="token punctuation">(</span><span class="token class-name">ThirdPartyYouTubeLib</span> servico<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>servico <span class="token operator">=</span> servico<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    method <span class="token function">listarVideos</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>listCache <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> precisaResetar<span class="token punctuation">)</span>
            listCache <span class="token operator">=</span> servico<span class="token punctuation">.</span><span class="token function">listVideos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> listCache<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    method <span class="token function">obterInfoVideo</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>videoCache <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> precisaResetar<span class="token punctuation">)</span>
            videoCache <span class="token operator">=</span> servico<span class="token punctuation">.</span><span class="token function">getVideoInfo</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> videoCache<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    method  <span class="token function">baixarVideo</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">downloadExists</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">||</span> precisaResetar<span class="token punctuation">)</span>
            servico<span class="token punctuation">.</span><span class="token function">downloadVideo</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// A classe GUI, que costumava trabalhar diretamente com um objeto de serviço,</span>
<span class="token comment">// permanece inalterada enquanto trabalha com o objeto de serviço por meio de uma interface.</span>
<span class="token comment">// Podemos passar com segurança um objeto proxy em vez de um objeto de serviço real, pois ambos</span>
<span class="token comment">// implementam a mesma interface.</span>
<span class="token keyword">class</span> <span class="token class-name">GerenciadorYouTube</span> <span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token class-name">BibliotecaYouTubeTerceirizada</span> servico<span class="token punctuation">;</span>

    <span class="token class-name">GerenciadorYouTube</span><span class="token punctuation">(</span><span class="token class-name">BibliotecaYouTubeTerceirizada</span> servico<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>servico <span class="token operator">=</span> servico<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    method <span class="token function">renderizarPaginaVideo</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> info <span class="token operator">=</span> servico<span class="token punctuation">.</span><span class="token function">getVideoInfo</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Renderizar a página de vídeo.</span>
    <span class="token punctuation">}</span>

    method <span class="token function">renderizarPainelLista</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> list <span class="token operator">=</span> servico<span class="token punctuation">.</span><span class="token function">listVideos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Renderizar a lista de miniaturas de vídeos.</span>
    <span class="token punctuation">}</span>

    method <span class="token function">reagirAoInputUsuario</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">renderizarPaginaVideo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">renderizarPainelLista</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// O aplicativo pode configurar proxies dinamicamente.</span>
<span class="token keyword">class</span> <span class="token class-name">Aplicacao</span> <span class="token punctuation">{</span>
    method <span class="token function">iniciar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ThirdPartyYouTubeLib</span> umServicoYouTube <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">YouTubeTerceirizado</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ThirdPartyYouTubeLib</span> umProxyYouTube <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">YouTubeCache</span><span class="token punctuation">(</span>umServicoYouTube<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">GerenciadorYouTube</span> gerenciador <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GerenciadorYouTube</span><span class="token punctuation">(</span>umProxyYouTube<span class="token punctuation">)</span><span class="token punctuation">;</span>
        gerenciador<span class="token punctuation">.</span><span class="token function">reagirAoInputUsuario</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="exemplo-pedro" tabindex="-1"><a class="header-anchor" href="#exemplo-pedro"><span>Exemplo Pedro</span></a></h3><figure><img src="https://www.plantuml.com/plantuml/svg/dL5B2i903Dtd55agCXUGKeexGK7q1CCqIg1cO1ABejxTsfR1BbneDlc-zn9IgVbabtC3LOvOZDBH1yBrEn8ol0DsjWXHA7HZiuCbbXCgfPRhcEQun3Po3K-0q7ZLZDoJR_u6xrAytaPjzyc8F2P3QyDgnS1QehAHhhnqrFghyDQpZ7hlOZw_U3WtEUbBgryOfkj7vyey0Bt2f08LITq_OF0l" alt="uml diagram" loading="lazy"><figcaption>Estrutura Código Pedro.</figcaption></figure><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">interface</span> <span class="token class-name">Internet</span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">conectar</span><span class="token punctuation">(</span><span class="token class-name">String</span> servidor<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">InternetReal</span> <span class="token keyword">implements</span> <span class="token class-name">Internet</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">conectar</span><span class="token punctuation">(</span><span class="token class-name">String</span> servidor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Conectado ao &quot;</span> <span class="token operator">+</span> servidor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">InternetProxy</span> <span class="token keyword">implements</span> <span class="token class-name">Internet</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Internet</span> internet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InternetReal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> sitesBanidos<span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        sitesBanidos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sitesBanidos<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;netflix.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sitesBanidos<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;youtube.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sitesBanidos<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;twitch.tv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">conectar</span><span class="token punctuation">(</span><span class="token class-name">String</span> servidor<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sitesBanidos<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>servidor<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;Acesso negado ao &quot;</span> <span class="token operator">+</span> servidor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        internet<span class="token punctuation">.</span><span class="token function">conectar</span><span class="token punctuation">(</span>servidor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Internet</span> internet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InternetProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            internet<span class="token punctuation">.</span><span class="token function">conectar</span><span class="token punctuation">(</span><span class="token string">&quot;google.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            internet<span class="token punctuation">.</span><span class="token function">conectar</span><span class="token punctuation">(</span><span class="token string">&quot;youtube.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="usos-conhecidos" tabindex="-1"><a class="header-anchor" href="#usos-conhecidos"><span>Usos conhecidos</span></a></h2><p>O exemplo de um proxy virtual na seção Motivação é proveniente das classes de blocos de construção de textos da ET++.</p><p>O NEXTSTEP [Add94] usa proxies (instâncias da classe NXProxy) como representantes locais de objetos que podem ser distribuídos. Um servidor cria proxies para objetos remotos quando são solicitados pelos clientes. Ao receber uma mensagem, o proxy a codifica junto com os seus argumentos e então repassa a mensagem codificada para o objeto remoto. De maneira similar, o objeto codifica quaisquer resultados que retornem, mandando-os de volta para o objeto NXProxy.</p><p>McCullough [McC87] discute o uso de proxies em Smalltalk para acessar objetos remotos. Pascoe [Pas86] discute como obter efeitos colaterais nas chamadas de métodos e controle de acesso com “encapsulators” (encapsuladores).</p><h2 id="padroes-relacionados" tabindex="-1"><a class="header-anchor" href="#padroes-relacionados"><span>Padrões Relacionados</span></a></h2><p>Adapter (140): um adaptador fornece uma interface diferente para o objeto que adapta. Em contraste, um proxy fornece a mesma interface como seu objeto. Contudo, um proxy usado para proteção de acesso pode se recusar a executar uma operação que o objeto executará. Assim, na prática, sua interface pode ser efetivamente um subconjunto da interface do objeto.</p><p>Decorator (170): embora decoradores possam ter implementações semelhantes às de proxies, os decoradores têm uma finalidade diferente. Um decorador acrescenta uma ou mais responsabilidades a um objeto, enquanto que um proxy controla o acesso a um objeto.</p><p>Proxies variam em grau com relação à maneira em que eles podem ser imple- mentados como um decorador (<em>decorator</em>). Um proxy de proteção pode ser implementado exatamente como um decorador. Por outro lado, um proxy remoto não conteráuma referência direta para o seu objeto real, mas somente uma referência indireta, tal como “host ID e endereço local no host”. Um proxy virtual começará com uma referência indireta, tal como um nome de arquivo, mas eventualmente obterá e usará uma referência direta.</p><h2 id="referencias" tabindex="-1"><a class="header-anchor" href="#referencias"><span>Referências</span></a></h2><ol><li>Gamma Erich - Padrões de Projetos: Soluções Reutilizáveis de Software Orientados a Objetos</li><li>https://refactoring.guru/design-patterns/proxy</li></ol>`,47))])}const x=i(m,[["render",v],["__file","Proxy.html.vue"]]),y=JSON.parse('{"path":"/posts/Seminarios/seminario-2/Proxy.html","title":"Proxy","lang":"pt-BR","frontmatter":{"icon":"edit","date":"2024-08-22T23:10:00.000Z","tag":["Proxy","gof"],"category":["seminario-2"],"order":10,"excerpt":"Apresentação do Padrão de Projeto Proxy","author":"Redror","gitInclude":["../../../../src/includes/seminario-2-Redror/README.md"],"description":"Proxy Pedro Carlos de Gois Barros Santos (20221TADSSAJ0006) @Redror Padrão Proxy - Pedro Carlos Intenção Fornece um substituto (surrogate) ou marcador da localização de outro ob...","head":[["meta",{"property":"og:url","content":"https://20241-ifba-saj-ads-ppr.github.io/blog-material-aula/blog-material-aula/posts/Seminarios/seminario-2/Proxy.html"}],["meta",{"property":"og:site_name","content":"20241 PPR Blog das Aulas"}],["meta",{"property":"og:title","content":"Proxy"}],["meta",{"property":"og:description","content":"Proxy Pedro Carlos de Gois Barros Santos (20221TADSSAJ0006) @Redror Padrão Proxy - Pedro Carlos Intenção Fornece um substituto (surrogate) ou marcador da localização de outro ob..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"pt-BR"}],["meta",{"property":"og:updated_time","content":"2024-09-30T13:40:45.000Z"}],["meta",{"property":"article:author","content":"Redror"}],["meta",{"property":"article:tag","content":"Proxy"}],["meta",{"property":"article:tag","content":"gof"}],["meta",{"property":"article:published_time","content":"2024-08-22T23:10:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-30T13:40:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Proxy\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-22T23:10:00.000Z\\",\\"dateModified\\":\\"2024-09-30T13:40:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Redror\\"}]}"]]},"headers":[{"level":2,"title":"Pedro Carlos de Gois Barros Santos (20221TADSSAJ0006)","slug":"pedro-carlos-de-gois-barros-santos-20221tadssaj0006","link":"#pedro-carlos-de-gois-barros-santos-20221tadssaj0006","children":[]},{"level":2,"title":"Intenção","slug":"intencao","link":"#intencao","children":[]},{"level":2,"title":"Também conhecido como","slug":"tambem-conhecido-como","link":"#tambem-conhecido-como","children":[]},{"level":2,"title":"Motivação","slug":"motivacao","link":"#motivacao","children":[]},{"level":2,"title":"Aplicabilidade","slug":"aplicabilidade","link":"#aplicabilidade","children":[]},{"level":2,"title":"Estrutura","slug":"estrutura","link":"#estrutura","children":[]},{"level":2,"title":"Participantes","slug":"participantes","link":"#participantes","children":[]},{"level":2,"title":"Colaborações","slug":"colaboracoes","link":"#colaboracoes","children":[]},{"level":2,"title":"Conseqüências","slug":"consequencias","link":"#consequencias","children":[]},{"level":2,"title":"Exemplo de Código","slug":"exemplo-de-codigo","link":"#exemplo-de-codigo","children":[{"level":3,"title":"Refactory Guru","slug":"refactory-guru","link":"#refactory-guru","children":[]},{"level":3,"title":"Exemplo Pedro","slug":"exemplo-pedro","link":"#exemplo-pedro","children":[]}]},{"level":2,"title":"Usos conhecidos","slug":"usos-conhecidos","link":"#usos-conhecidos","children":[]},{"level":2,"title":"Padrões Relacionados","slug":"padroes-relacionados","link":"#padroes-relacionados","children":[]},{"level":2,"title":"Referências","slug":"referencias","link":"#referencias","children":[]}],"git":{"createdTime":1727703645000,"updatedTime":1727703645000,"contributors":[{"name":"Leandro Costa","email":"leandro.costa@ifba.edu.br","commits":1}]},"readingTime":{"minutes":0.14,"words":42},"filePathRelative":"posts/Seminarios/seminario-2/Proxy.md","localizedDate":"22 de agosto de 2024","autoDesc":true}');export{x as comp,y as data};

import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as t,c as p,b as a,a as n}from"./app-BJeaDvQe.js";const c={},i=n('<h3 id="padrao-de-projeto-object-pool" tabindex="-1"><a class="header-anchor" href="#padrao-de-projeto-object-pool"><span>Padrão de Projeto Object Pool</span></a></h3><h4 id="intencao" tabindex="-1"><a class="header-anchor" href="#intencao"><span>Intenção</span></a></h4><p>Gerenciar a reutilização de objetos caros de serem criados ou inicializados, evitando a necessidade de criar novas instâncias repetidamente.</p><h4 id="outros-nomes" tabindex="-1"><a class="header-anchor" href="#outros-nomes"><span>Outros Nomes</span></a></h4><ul><li>Pool de Objetos</li><li>Pooling</li></ul><h4 id="motivacao" tabindex="-1"><a class="header-anchor" href="#motivacao"><span>Motivação</span></a></h4><p>Criar e destruir objetos pode ser caro em termos de tempo e recursos, especialmente quando os objetos são grandes ou complexos. O padrão Object Pool permite que os objetos sejam reutilizados, o que pode melhorar significativamente o desempenho da aplicação.</p><h4 id="aplicabilidade" tabindex="-1"><a class="header-anchor" href="#aplicabilidade"><span>Aplicabilidade</span></a></h4><p>Use o padrão Object Pool quando:</p><ul><li>A criação de objetos é custosa.</li><li>Muitos objetos similares são necessários ao longo do tempo.</li><li>Os objetos são caros para inicializar, manter ou destruir.</li></ul><h4 id="estrutura" tabindex="-1"><a class="header-anchor" href="#estrutura"><span>Estrutura</span></a></h4><p><strong>Diagrama de Classe</strong></p>',12),l=n(`<p>...</p><h4 id="participantes" tabindex="-1"><a class="header-anchor" href="#participantes"><span>Participantes</span></a></h4><ul><li><strong>Pool (ObjectPool)</strong>: Mantém uma coleção de objetos reutilizáveis. Fornece métodos para obter um objeto do pool e devolver um objeto ao pool.</li><li><strong>Cliente</strong>: Obtém e devolve objetos do pool conforme necessário.</li><li><strong>Objeto Pooled</strong>: A instância do objeto gerenciado pelo pool.</li></ul><h4 id="colaboracoes" tabindex="-1"><a class="header-anchor" href="#colaboracoes"><span>Colaborações</span></a></h4><ul><li><strong>Clientes</strong> obtêm objetos do pool quando necessário e devolvem ao pool quando não são mais necessários.</li><li><strong>Pool</strong> gerencia a disponibilidade dos objetos e garante que os objetos sejam resetados antes de serem reutilizados.</li></ul><h4 id="consequencias" tabindex="-1"><a class="header-anchor" href="#consequencias"><span>Consequências</span></a></h4><ul><li><strong>Vantagens</strong>: <ul><li>Reduz o tempo e recursos necessários para criar e destruir objetos.</li><li>Melhora o desempenho da aplicação em cenários de alta demanda de objetos.</li></ul></li><li><strong>Desvantagens</strong>: <ul><li>A implementação do pool pode ser complexa.</li><li>O gerenciamento do ciclo de vida dos objetos pode ser difícil, especialmente quando se lida com muitos objetos simultaneamente.</li></ul></li></ul><h4 id="implementacao" tabindex="-1"><a class="header-anchor" href="#implementacao"><span>Implementação</span></a></h4><p><strong>Java Example: Pool de Conexões de Banco de Dados</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// Classe que simula uma conexão com banco de dados</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DatabaseConnection</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">DatabaseConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Criando uma nova conexão com o banco de dados...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Resetando a conexão...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Fechando a conexão...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Pool de conexões</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Stack</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConnectionPool</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DatabaseConnection</span><span class="token punctuation">&gt;</span></span> pool<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> size<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ConnectionPool</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> size<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>pool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            pool<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DatabaseConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">DatabaseConnection</span> <span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pool<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Conexão adquirida do pool.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> pool<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Nenhuma conexão disponível. Criando uma nova.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DatabaseConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token class-name">DatabaseConnection</span> connection<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        connection<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pool<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Conexão devolvida ao pool.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Uso do pool de conexões</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ConnectionPool</span> pool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConnectionPool</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Adquirindo conexões</span>
        <span class="token class-name">DatabaseConnection</span> conn1 <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">DatabaseConnection</span> conn2 <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Usando as conexões...</span>

        <span class="token comment">// Devolvendo conexões ao pool</span>
        pool<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span>conn1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pool<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span>conn2<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Adquirindo novamente</span>
        <span class="token class-name">DatabaseConnection</span> conn3 <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token operator">*</span><span class="token class-name">Diagrama</span> de classes <span class="token class-name">Conex</span>ão com <span class="token constant">BD</span><span class="token operator">*</span>
\`\`\`mermaid
classDiagram
    
    <span class="token class-name">DatabaseConnectionPool</span> <span class="token operator">--</span><span class="token operator">&gt;</span> <span class="token class-name">DatabaseConnection</span> <span class="token operator">:</span> manages
    <span class="token keyword">class</span> <span class="token class-name">DatabaseConnectionPool</span> <span class="token punctuation">{</span>
        <span class="token operator">-</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DatabaseConnection</span><span class="token punctuation">&gt;</span></span> pool
        <span class="token operator">-</span> <span class="token keyword">int</span> size
        <span class="token operator">+</span> <span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token class-name">DatabaseConnection</span>
        <span class="token operator">+</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token class-name">DatabaseConnection</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">class</span> <span class="token class-name">DatabaseConnection</span> <span class="token punctuation">{</span>
        <span class="token operator">+</span> <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token operator">+</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
´´´

#### <span class="token class-name">Usos</span> <span class="token class-name">Conhecidos</span>
<span class="token operator">-</span> <span class="token class-name">Pools</span> de conexões de banco de dados em sistemas web<span class="token punctuation">.</span>
<span class="token operator">-</span> <span class="token class-name">Pools</span> de threads em servidores de aplicação<span class="token punctuation">.</span>
<span class="token operator">-</span> <span class="token class-name">Pools</span> de objetos gráficos em jogos e sistemas de simulação<span class="token punctuation">.</span>

#### <span class="token class-name">Padr</span>ões <span class="token class-name">Relacionados</span>
<span class="token operator">-</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token class-name">Factory</span> <span class="token class-name">Method</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">:</span> <span class="token class-name">Pode</span> ser usado para criar os objetos que serão gerenciados pelo pool<span class="token punctuation">.</span>
<span class="token operator">-</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token class-name">Prototype</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">:</span> <span class="token class-name">Pode</span> ser usado para clonar objetos que serão gerenciados pelo pool<span class="token punctuation">.</span>


#### <span class="token class-name">Exemplo</span><span class="token operator">:</span>

<span class="token operator">*</span><span class="token operator">*</span><span class="token class-name">Exemplo</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token class-name">Pool</span> de <span class="token class-name">Objetos</span> <span class="token class-name">Gr</span>áficos em <span class="token class-name">Jogo</span><span class="token operator">*</span><span class="token operator">*</span>

\`\`\`java
<span class="token comment">// Classe que simula um objeto gráfico</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GraphicObject</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">GraphicObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Criando um novo objeto gráfico...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Resetando o objeto gráfico...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Desenhando o objeto gráfico...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Pool de objetos gráficos</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Stack</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GraphicObjectPool</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GraphicObject</span><span class="token punctuation">&gt;</span></span> pool<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> size<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">GraphicObjectPool</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> size<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>pool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            pool<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GraphicObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">GraphicObject</span> <span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pool<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Objeto gráfico adquirido do pool.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> pool<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Nenhum objeto gráfico disponível. Criando um novo.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">GraphicObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token class-name">GraphicObject</span> graphicObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        graphicObject<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pool<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>graphicObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Objeto gráfico devolvido ao pool.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Uso do pool de objetos gráficos</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">GraphicObjectPool</span> pool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GraphicObjectPool</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Adquirindo objetos gráficos</span>
        <span class="token class-name">GraphicObject</span> obj1 <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">GraphicObject</span> obj2 <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Usando os objetos gráficos...</span>
        obj1<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        obj2<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Devolvendo objetos gráficos ao pool</span>
        pool<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pool<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Adquirindo novamente</span>
        <span class="token class-name">GraphicObject</span> obj3 <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        obj3<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="exemplo-de-pool-de-objetos-graficos" tabindex="-1"><a class="header-anchor" href="#exemplo-de-pool-de-objetos-graficos"><span>Exemplo de Pool de Objetos Gráficos</span></a></h3><hr>`,12),u=n(`<hr><pre><code>## Explicação:
GraphicObjectPool:
</code></pre><p>**Atributos: -spritePool: Uma pilha (Stack) de objetos GraphicObject para sprites. -uiElementPool: Uma pilha (Stack) de objetos GraphicObject para elementos da interface do usuário. **Métodos: -GraphicObjectPool(int spritePoolSize, int uiElementPoolSize): Construtor que inicializa o pool com o número especificado de objetos para sprites e UIElements. -acquire(String type): GraphicObject: Adquire um objeto do pool com base no tipo especificado (Sprite ou UIElement). -release(GraphicObject graphicObject): Devolve um objeto ao pool após resetá-lo.</p><p>GraphicObject:</p><p>**Atributos: -type: O tipo do objeto gráfico (por exemplo, &quot;Sprite&quot;, &quot;UIElement&quot;). **Métodos: -GraphicObject(String type): Construtor que cria um objeto gráfico do tipo especificado. -reset(): Reseta o objeto gráfico. -draw(): Desenha o objeto gráfico. -getType(): String: Retorna o tipo do objeto gráfico.</p><hr><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>### Exemplo Real de Uso do Object Pool

#### Situação Real: Sistema de Processamento de Imagens

Em um sistema de processamento de imagens que precisa aplicar filtros e realizar transformações em tempo real. Cada operação pode ser custosa e, portanto, é necessário um gerenciamento eficiente dos objetos de imagem para garantir um bom desempenho.

### Classes e Implementação

#### Classe \`Image\`
Esta classe representa uma imagem que será processada. Pode incluir métodos para aplicar filtros e outras operações de imagem.

\`\`\`java
public class Image {
    private String name;

    public Image(String name) {
        this.name = name;
        System.out.println(&quot;Carregando a imagem: &quot; + name);
    }

    public void applyFilter(String filter) {
        System.out.println(&quot;Aplicando o filtro &quot; + filter + &quot; na imagem: &quot; + name);
    }

    public void reset() {
        System.out.println(&quot;Resetando a imagem: &quot; + name);
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="classe-imagepool" tabindex="-1"><a class="header-anchor" href="#classe-imagepool"><span>Classe <code>ImagePool</code></span></a></h4><p>Esta classe gerencia um pool de objetos <code>Image</code>, reutilizando-os para operações de processamento.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Stack</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ImagePool</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Image</span><span class="token punctuation">&gt;</span></span> pool<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> size<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ImagePool</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> size<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>pool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            pool<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">&quot;Imagem &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Image</span> <span class="token function">acquire</span><span class="token punctuation">(</span><span class="token class-name">String</span> imageName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pool<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Imagem adquirida do pool.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Image</span> img <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            img<span class="token punctuation">.</span><span class="token function">applyFilter</span><span class="token punctuation">(</span><span class="token string">&quot;Carregando nova imagem: &quot;</span> <span class="token operator">+</span> imageName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> img<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Nenhuma imagem disponível. Carregando uma nova.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span>imageName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token class-name">Image</span> image<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        image<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pool<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Imagem devolvida ao pool.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="classe-main" tabindex="-1"><a class="header-anchor" href="#classe-main"><span>Classe <code>Main</code></span></a></h4><p>Esta classe demonstra como o pool de imagens pode ser utilizado em um cenário de processamento de imagens.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ImagePool</span> pool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImagePool</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Adquirindo imagens do pool</span>
        <span class="token class-name">Image</span> img1 <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token string">&quot;ImagemA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Image</span> img2 <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token string">&quot;ImagemB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Aplicando filtros nas imagens</span>
        img1<span class="token punctuation">.</span><span class="token function">applyFilter</span><span class="token punctuation">(</span><span class="token string">&quot;Filtro1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        img2<span class="token punctuation">.</span><span class="token function">applyFilter</span><span class="token punctuation">(</span><span class="token string">&quot;Filtro2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Devolvendo imagens ao pool</span>
        pool<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span>img1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pool<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span>img2<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Adquirindo novamente</span>
        <span class="token class-name">Image</span> img3 <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token string">&quot;ImagemC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        img3<span class="token punctuation">.</span><span class="token function">applyFilter</span><span class="token punctuation">(</span><span class="token string">&quot;Filtro3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="explicacao" tabindex="-1"><a class="header-anchor" href="#explicacao"><span>Explicação</span></a></h3><ol><li><p><strong>Inicialização do Pool</strong>:</p><ul><li>O <code>ImagePool</code> é inicializado com três objetos <code>Image</code>, cada um representando uma imagem diferente.</li></ul></li><li><p><strong>Aquisição de Imagens</strong>:</p><ul><li>Quando uma imagem é necessária, o método <code>acquire()</code> é chamado. Se houver imagens disponíveis no pool, uma delas é reutilizada. Caso contrário, uma nova imagem é criada.</li></ul></li><li><p><strong>Aplicação de Filtros</strong>:</p><ul><li>As imagens adquiridas são usadas para aplicar filtros ou outras operações de imagem.</li></ul></li><li><p><strong>Liberação de Imagens</strong>:</p><ul><li>Após o uso, as imagens são resetadas e devolvidas ao pool usando o método <code>release()</code>.</li></ul></li><li><p><strong>Reaquisição de Imagens</strong>:</p><ul><li>As imagens podem ser adquiridas novamente do pool, permitindo sua reutilização em futuras operações.</li></ul></li></ol><h3 id="vantagens-do-uso-do-object-pool" tabindex="-1"><a class="header-anchor" href="#vantagens-do-uso-do-object-pool"><span>Vantagens do Uso do Object Pool</span></a></h3><ol><li><p><strong>Eficiência de Recursos</strong>:</p><ul><li>Reduz a sobrecarga de criação e destruição frequente de objetos, o que é especialmente útil para objetos que são caros de criar.</li></ul></li><li><p><strong>Melhoria de Desempenho</strong>:</p><ul><li>Reutilizar objetos existentes pode melhorar significativamente o desempenho em cenários onde a criação de objetos é um gargalo.</li></ul></li><li><p><strong>Gerenciamento de Recursos</strong>:</p><ul><li>Facilita o gerenciamento de recursos limitados, como conexões de banco de dados, threads ou objetos de grande porte, garantindo que um número máximo de objetos esteja em uso simultaneamente.</li></ul></li></ol><h3 id="conclusao" tabindex="-1"><a class="header-anchor" href="#conclusao"><span>Conclusão</span></a></h3><p>O padrão Object Pool é uma técnica eficiente para gerenciar a reutilização de objetos custosos em termos de criação e inicialização. No exemplo real de um sistema de processamento de imagens, o pool de objetos permite que o sistema reutilize objetos de imagem, otimizando o desempenho e a utilização de recursos.</p><h3 id="referencias" tabindex="-1"><a class="header-anchor" href="#referencias"><span>Referências</span></a></h3><ul><li>GAMMA, Erich. et al. Padrões de projetos: Soluções reutilizáveis de software orientados a objetos Bookman editora, 2009</li><li>Object Pool Desing Pattern: https://www.geeksforgeeks.org/object-pool-design-pattern/</li><li>JAVA Developer Guide to start with Object Pool Design Pattern: https://medium.com/javarevisited/java-developer-guide-to-start-with-object-pool-design-pattern-3d5fb121b327</li><li>SOUZA, Alberto. Java EE.</li><li>Design Patterns em Java. K19 Treinamentos, 2012.</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div>`,22);function r(d,k){const s=o("Mermaid");return t(),p("div",null,[i,a(s,{id:"mermaid-59",code:"eJxLzkksLnbJTEwvSszlUgAC55zM1LwSBV1dO4WA/PwcBSsFG5vS4tRiOzuwNFg9RKYaLAAC2onJhaWZRakamgihotSc1MRimFAtmARrs6nR1VVwzs9LLkotSQWJGOKRM0KyFEUPGbZjmmJEhimorgAHU1F+SmlyCcQbqMYjSSP7BEUHipARFwAnhXAV"}),l,a(s,{id:"mermaid-148",code:"eJyFkEEOwiAQRfc9BUsa7QUa05XGpSb1AiNOKkppBRqjxrsL1LSgNrIg4fPnzcxPmACtlxwqBXVC7PHXWkF75GyzPyEz26YRJMuKWCU5qUFChXos87AfxQ//605GSgPsvIg8BdGt4gad95+z4yuBNUoPHsyz76aUSxNwS37HOXFaRHByGmCAXTqukJZGcVkRc2sxzWN44FYoEDTSOBgb5fjq4c9kKp+PbIauU6tFk0WjaDQ0VA4KrpFQodnZKmoX6iHv0V4r85sQ"}),u])}const b=e(c,[["render",r],["__file","index.html.vue"]]),g=JSON.parse('{"path":"/includes/seminario-1-JoaoAugustoMPdJ/","title":"","lang":"pt-BR","frontmatter":{"description":"Padrão de Projeto Object Pool Intenção Gerenciar a reutilização de objetos caros de serem criados ou inicializados, evitando a necessidade de criar novas instâncias repetidament...","head":[["meta",{"property":"og:url","content":"https://20241-ifba-saj-ads-ppr.github.io/blog-material-aula/blog-material-aula/includes/seminario-1-JoaoAugustoMPdJ/"}],["meta",{"property":"og:site_name","content":"20241 PPR Blog das Aulas"}],["meta",{"property":"og:description","content":"Padrão de Projeto Object Pool Intenção Gerenciar a reutilização de objetos caros de serem criados ou inicializados, evitando a necessidade de criar novas instâncias repetidament..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"pt-BR"}],["meta",{"property":"article:author","content":"Leandro Souza"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Leandro Souza\\",\\"url\\":\\"https://github.com/leandro-costa\\"}]}"]]},"headers":[{"level":3,"title":"Padrão de Projeto Object Pool","slug":"padrao-de-projeto-object-pool","link":"#padrao-de-projeto-object-pool","children":[]},{"level":3,"title":"Exemplo de Pool de Objetos Gráficos","slug":"exemplo-de-pool-de-objetos-graficos","link":"#exemplo-de-pool-de-objetos-graficos","children":[]},{"level":3,"title":"Explicação","slug":"explicacao","link":"#explicacao","children":[]},{"level":3,"title":"Vantagens do Uso do Object Pool","slug":"vantagens-do-uso-do-object-pool","link":"#vantagens-do-uso-do-object-pool","children":[]},{"level":3,"title":"Conclusão","slug":"conclusao","link":"#conclusao","children":[]},{"level":3,"title":"Referências","slug":"referencias","link":"#referencias","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":4.81,"words":1444},"filePathRelative":"includes/seminario-1-JoaoAugustoMPdJ/README.md","autoDesc":true}');export{b as comp,g as data};

import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as p,c,a as s,e}from"./app-COmlyzQy.js";const i={};function l(u,n){const a=t("Mermaid");return p(),c("div",null,[n[0]||(n[0]=s('<h3 id="padrao-de-projeto-object-pool" tabindex="-1"><a class="header-anchor" href="#padrao-de-projeto-object-pool"><span>Padrão de Projeto Object Pool</span></a></h3><h4 id="intencao" tabindex="-1"><a class="header-anchor" href="#intencao"><span>Intenção</span></a></h4><p>Gerenciar a reutilização de objetos caros de serem criados ou inicializados, evitando a necessidade de criar novas instâncias repetidamente.</p><h4 id="outros-nomes" tabindex="-1"><a class="header-anchor" href="#outros-nomes"><span>Outros Nomes</span></a></h4><ul><li>Pool de Objetos</li><li>Pooling</li></ul><h4 id="motivacao" tabindex="-1"><a class="header-anchor" href="#motivacao"><span>Motivação</span></a></h4><p>Criar e destruir objetos pode ser caro em termos de tempo e recursos, especialmente quando os objetos são grandes ou complexos. O padrão Object Pool permite que os objetos sejam reutilizados, o que pode melhorar significativamente o desempenho da aplicação.</p><h4 id="aplicabilidade" tabindex="-1"><a class="header-anchor" href="#aplicabilidade"><span>Aplicabilidade</span></a></h4><p>Use o padrão Object Pool quando:</p><ul><li>A criação de objetos é custosa.</li><li>Muitos objetos similares são necessários ao longo do tempo.</li><li>Os objetos são caros para inicializar, manter ou destruir.</li></ul><h4 id="estrutura" tabindex="-1"><a class="header-anchor" href="#estrutura"><span>Estrutura</span></a></h4><p><strong>Diagrama de Classe</strong></p>',12)),e(a,{id:"mermaid-59",code:"eJxLzkksLnbJTEwvSszlUgAC55zM1LwSBV1dO4WA/PwcBSsFG5vS4tRiOzuwNFg9RKYaLAAC2onJhaWZRakamgihotSc1MRimFAtmARrs6nR1VVwzs9LLkotSQWJGOKRM0KyFEUPGbZjmmJEhimorgAHU1F+SmlyCcQbqMYjSSP7BEUHipARFwAnhXAV"}),n[1]||(n[1]=s(`<h4 id="participantes" tabindex="-1"><a class="header-anchor" href="#participantes"><span>Participantes</span></a></h4><ul><li><strong>Pool (ObjectPool)</strong>: Mantém uma coleção de objetos reutilizáveis. Fornece métodos para obter um objeto do pool e devolver um objeto ao pool.</li><li><strong>Cliente</strong>: Obtém e devolve objetos do pool conforme necessário.</li><li><strong>Objeto Pooled</strong>: A instância do objeto gerenciado pelo pool.</li></ul><h4 id="colaboracoes" tabindex="-1"><a class="header-anchor" href="#colaboracoes"><span>Colaborações</span></a></h4><ul><li><strong>Clientes</strong> obtêm objetos do pool quando necessário e devolvem ao pool quando não são mais necessários.</li><li><strong>Pool</strong> gerencia a disponibilidade dos objetos e garante que os objetos sejam resetados antes de serem reutilizados.</li></ul><h4 id="consequencias" tabindex="-1"><a class="header-anchor" href="#consequencias"><span>Consequências</span></a></h4><ul><li><strong>Vantagens</strong>: <ul><li>Reduz o tempo e recursos necessários para criar e destruir objetos.</li><li>Melhora o desempenho da aplicação em cenários de alta demanda de objetos.</li></ul></li><li><strong>Desvantagens</strong>: <ul><li>A implementação do pool pode ser complexa.</li><li>O gerenciamento do ciclo de vida dos objetos pode ser difícil, especialmente quando se lida com muitos objetos simultaneamente.</li></ul></li></ul><h4 id="implementacao" tabindex="-1"><a class="header-anchor" href="#implementacao"><span>Implementação</span></a></h4><p><strong>Java Example: Pool de Conexões de Banco de Dados</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// Classe que simula uma conexão com banco de dados</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DatabaseConnection</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">DatabaseConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Criando uma nova conexão com o banco de dados...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Resetando a conexão...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Fechando a conexão...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Pool de conexões</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Stack</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConnectionPool</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DatabaseConnection</span><span class="token punctuation">&gt;</span></span> pool<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> size<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ConnectionPool</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> size<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>pool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            pool<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DatabaseConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">DatabaseConnection</span> <span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pool<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Conexão adquirida do pool.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> pool<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Nenhuma conexão disponível. Criando uma nova.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DatabaseConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token class-name">DatabaseConnection</span> connection<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        connection<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pool<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Conexão devolvida ao pool.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Uso do pool de conexões</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ConnectionPool</span> pool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConnectionPool</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Adquirindo conexões</span>
        <span class="token class-name">DatabaseConnection</span> conn1 <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">DatabaseConnection</span> conn2 <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Usando as conexões...</span>

        <span class="token comment">// Devolvendo conexões ao pool</span>
        pool<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span>conn1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pool<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span>conn2<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Adquirindo novamente</span>
        <span class="token class-name">DatabaseConnection</span> conn3 <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>Diagrama de classes Conexão com BD</em></p>`,10)),e(a,{id:"mermaid-144",code:"eJx9jsEKwjAMhu8+RY4d0hcYsot7AMEniCWMYtdqEy+K726XoRQ2l0MOyZcvvwvI3HscMo47KKWtR8ELMh1TjOTEp3hKKYC13coKWhgx4kCst2r8Z3gpMpWFs6C7HpZgB7eCVqCPAuyf9BvtAd394TOZpl35VHGZApWdWUKNUu/NyFXcScUkZj6bJy6kov6KPjXDYyc="}),n[2]||(n[2]=s(`<h4 id="usos-conhecidos" tabindex="-1"><a class="header-anchor" href="#usos-conhecidos"><span>Usos Conhecidos</span></a></h4><ul><li>Pools de conexões de banco de dados em sistemas web.</li><li>Pools de threads em servidores de aplicação.</li><li>Pools de objetos gráficos em jogos e sistemas de simulação.</li></ul><h4 id="padroes-relacionados" tabindex="-1"><a class="header-anchor" href="#padroes-relacionados"><span>Padrões Relacionados</span></a></h4><ul><li><strong>Factory Method</strong>: Pode ser usado para criar os objetos que serão gerenciados pelo pool.</li><li><strong>Prototype</strong>: Pode ser usado para clonar objetos que serão gerenciados pelo pool.</li></ul><h5 id="exemplo" tabindex="-1"><a class="header-anchor" href="#exemplo"><span>Exemplo:</span></a></h5><p><em>Exemplo: Pool de Objetos Gráficos em Jogo</em></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Stack</span></span><span class="token punctuation">;</span>

<span class="token comment">// Classe que gerencia o pool de objetos gráficos</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GraphicObjectPool</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GraphicObject</span><span class="token punctuation">&gt;</span></span> spritePool<span class="token punctuation">;</span> <span class="token comment">// Pilha para objetos do tipo &quot;sprite&quot;</span>
    <span class="token keyword">private</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GraphicObject</span><span class="token punctuation">&gt;</span></span> uiElementPool<span class="token punctuation">;</span> <span class="token comment">// Pilha para objetos do tipo &quot;uiElement&quot;</span>

    <span class="token comment">// Construtor que inicializa o pool com objetos gráficos</span>
    <span class="token keyword">public</span> <span class="token class-name">GraphicObjectPool</span><span class="token punctuation">(</span><span class="token keyword">int</span> spritePoolSize<span class="token punctuation">,</span> <span class="token keyword">int</span> uiElementPoolSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        spritePool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        uiElementPool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// Inicializa o pool de sprites com objetos gráficos do tipo &quot;sprite&quot;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> spritePoolSize<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            spritePool<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GraphicObject</span><span class="token punctuation">(</span><span class="token string">&quot;sprite&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// Inicializa o pool de elementos de UI com objetos gráficos do tipo &quot;uiElement&quot;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> uiElementPoolSize<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            uiElementPool<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GraphicObject</span><span class="token punctuation">(</span><span class="token string">&quot;uiElement&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Método para adquirir um objeto gráfico do pool com base no tipo</span>
    <span class="token keyword">public</span> <span class="token class-name">GraphicObject</span> <span class="token function">acquire</span><span class="token punctuation">(</span><span class="token class-name">String</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;sprite&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>spritePool<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Retorna um objeto do pool de sprites se disponível</span>
            <span class="token keyword">return</span> spritePool<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;uiElement&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>uiElementPool<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Retorna um objeto do pool de elementos de UI se disponível</span>
            <span class="token keyword">return</span> uiElementPool<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// Se não houver objetos disponíveis, cria um novo objeto do tipo solicitado</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">GraphicObject</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Método para liberar um objeto gráfico e devolvê-lo ao pool apropriado</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token class-name">GraphicObject</span> graphicObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;sprite&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>graphicObject<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Adiciona o objeto de volta ao pool de sprites</span>
            spritePool<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>graphicObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;uiElement&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>graphicObject<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Adiciona o objeto de volta ao pool de elementos de UI</span>
            uiElementPool<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>graphicObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// Opcional: reinicializa o objeto antes de adicioná-lo de volta ao pool</span>
        graphicObject<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Classe que representa um objeto gráfico</span>
<span class="token keyword">class</span> <span class="token class-name">GraphicObject</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> type<span class="token punctuation">;</span> <span class="token comment">// Tipo do objeto gráfico</span>

    <span class="token comment">// Construtor que define o tipo do objeto</span>
    <span class="token keyword">public</span> <span class="token class-name">GraphicObject</span><span class="token punctuation">(</span><span class="token class-name">String</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> type<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Método para reinicializar o objeto gráfico</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Implementar a lógica de reinicialização, se necessário</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Método para desenhar o objeto gráfico</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Implementar a lógica de desenho, se necessário</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Método para obter o tipo do objeto gráfico</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> type<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="exemplo-de-pool-de-objetos-graficos" tabindex="-1"><a class="header-anchor" href="#exemplo-de-pool-de-objetos-graficos"><span>Exemplo de Pool de Objetos Gráficos</span></a></h3><hr>`,9)),e(a,{id:"mermaid-191",code:"eJyFkEEOwiAQRfc9BUsa7QUa05XGpSb1AiNOKkppBRqjxrsL1LSgNrIg4fPnzcxPmACtlxwqBXVC7PHXWkF75GyzPyEz26YRJMuKWCU5qUFChXos87AfxQ//605GSgPsvIg8BdGt4gad95+z4yuBNUoPHsyz76aUSxNwS37HOXFaRHByGmCAXTqukJZGcVkRc2sxzWN44FYoEDTSOBgb5fjq4c9kKp+PbIauU6tFk0WjaDQ0VA4KrpFQodnZKmoX6iHv0V4r85sQ"}),n[3]||(n[3]=s('<h2 id="explicacao" tabindex="-1"><a class="header-anchor" href="#explicacao"><span>Explicação:</span></a></h2><p><em>GraphicObjectPool</em>:</p><p><em>Atributos</em>: -spritePool: Uma pilha (Stack) de objetos GraphicObject para sprites. -uiElementPool: Uma pilha (Stack) de objetos GraphicObject para elementos da interface do usuário.</p><p><em>Métodos</em>: -GraphicObjectPool(int spritePoolSize, int uiElementPoolSize): Construtor que inicializa o pool com o número especificado de objetos para sprites e UIElements. -acquire(String type): GraphicObject: Adquire um objeto do pool com base no tipo especificado (Sprite ou UIElement). -release(GraphicObject graphicObject): Devolve um objeto ao pool após resetá-lo.</p><p><em>GraphicObject</em>:</p><p><em>Atributos</em>: -type: O tipo do objeto gráfico (por exemplo, &quot;Sprite&quot;, &quot;UIElement&quot;).</p><p><em>Métodos</em>: -GraphicObject(String type): Construtor que cria um objeto gráfico do tipo especificado. -reset(): Reseta o objeto gráfico. -draw(): Desenha o objeto gráfico. -getType(): String: Retorna o tipo do objeto gráfico.</p><h3 id="referencias" tabindex="-1"><a class="header-anchor" href="#referencias"><span>Referências</span></a></h3><ul><li>GAMMA, Erich. et al. Padrões de projetos: Soluções reutilizáveis de software orientados a objetos Bookman editora, 2009</li><li>Object Pool Desing Pattern: https://www.geeksforgeeks.org/object-pool-design-pattern/</li><li>JAVA Developer Guide to start with Object Pool Design Pattern: https://medium.com/javarevisited/java-developer-guide-to-start-with-object-pool-design-pattern-3d5fb121b327</li><li>SOUZA, Alberto. Java EE.</li><li>Design Patterns em Java. K19 Treinamentos, 2012.</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div>',10))])}const k=o(i,[["render",l],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/includes/seminario-1-JoaoAugustoMPdJ/","title":"","lang":"pt-BR","frontmatter":{"description":"Padrão de Projeto Object Pool Intenção Gerenciar a reutilização de objetos caros de serem criados ou inicializados, evitando a necessidade de criar novas instâncias repetidament...","head":[["meta",{"property":"og:url","content":"https://20241-ifba-saj-ads-ppr.github.io/blog-material-aula/blog-material-aula/includes/seminario-1-JoaoAugustoMPdJ/"}],["meta",{"property":"og:site_name","content":"20241 PPR Blog das Aulas"}],["meta",{"property":"og:description","content":"Padrão de Projeto Object Pool Intenção Gerenciar a reutilização de objetos caros de serem criados ou inicializados, evitando a necessidade de criar novas instâncias repetidament..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"pt-BR"}],["meta",{"property":"article:author","content":"Leandro Souza"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Leandro Souza\\",\\"url\\":\\"https://github.com/leandro-costa\\"}]}"]]},"headers":[{"level":3,"title":"Padrão de Projeto Object Pool","slug":"padrao-de-projeto-object-pool","link":"#padrao-de-projeto-object-pool","children":[]},{"level":3,"title":"Exemplo de Pool de Objetos Gráficos","slug":"exemplo-de-pool-de-objetos-graficos","link":"#exemplo-de-pool-de-objetos-graficos","children":[]},{"level":2,"title":"Explicação:","slug":"explicacao","link":"#explicacao","children":[{"level":3,"title":"Referências","slug":"referencias","link":"#referencias","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.57,"words":1071},"filePathRelative":"includes/seminario-1-JoaoAugustoMPdJ/README.md","autoDesc":true}');export{k as comp,m as data};

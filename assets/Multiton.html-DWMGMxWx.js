import{_ as s}from"./EstruturaMultiton-BsO-1dE9.js";import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o,c as i,a as c,e as p}from"./app-COmlyzQy.js";const l={};function u(r,a){const n=t("Mermaid");return o(),i("div",null,[a[0]||(a[0]=c('<h1 id="multiton-criacao-de-objetos" tabindex="-1"><a class="header-anchor" href="#multiton-criacao-de-objetos"><span>Multiton: Criação de Objetos</span></a></h1><h2 id="intencao" tabindex="-1"><a class="header-anchor" href="#intencao"><span>Intenção</span></a></h2><p>Garantir que uma classe tenha um número fixo de instâncias e fornecer um ponto global de acesso para essas instâncias.</p><h2 id="tambem-conhecido-como" tabindex="-1"><a class="header-anchor" href="#tambem-conhecido-como"><span>Também conhecido como</span></a></h2><ul><li>Fixed instance pool</li><li>Named instance</li></ul><h2 id="motivacao" tabindex="-1"><a class="header-anchor" href="#motivacao"><span>Motivação</span></a></h2><p>O padrão Multiton é útil quando é necessário gerenciar múltiplas instâncias de uma classe, mas o número de instâncias deve ser limitado e controlado. Por exemplo, considere uma aplicação que precisa gerenciar conexões a vários bancos de dados diferentes. Embora você queira limitar o número de instâncias de conexões a um banco específico, deseja garantir que a mesma instância seja reutilizada para uma conexão específica.</p><p>Como garantir que o número de instâncias seja limitado e acessível globalmente? O padrão Multiton mantém um mapa de instâncias gerenciadas, garantindo que cada instância seja criada e acessada de acordo com uma chave única.</p><h2 id="aplicabilidade" tabindex="-1"><a class="header-anchor" href="#aplicabilidade"><span>Aplicabilidade</span></a></h2><p>Use o padrão Multiton quando:</p><ul><li>For preciso haver um número fixo e conhecido de instâncias de uma classe.</li><li>Você precisar acessar essas instâncias globalmente através de uma chave ou identificador.</li></ul><h2 id="estrutura" tabindex="-1"><a class="header-anchor" href="#estrutura"><span>Estrutura</span></a></h2><figure><img src="'+s+`" alt="Estrutura Multiton" tabindex="0" loading="lazy"><figcaption>Estrutura Multiton</figcaption></figure><h2 id="participantes" tabindex="-1"><a class="header-anchor" href="#participantes"><span>Participantes</span></a></h2><ul><li><strong>Multiton</strong><ul><li>Define uma operação <code>getInstance</code> que permite acessar instâncias específicas através de uma chave. Cada chave corresponde a uma única instância.</li><li>Gerencia um mapa de instâncias para garantir que cada chave tenha uma única instância associada.</li></ul></li></ul><h2 id="colaboracoes" tabindex="-1"><a class="header-anchor" href="#colaboracoes"><span>Colaborações</span></a></h2><ul><li>Os clientes acessam uma instância <code>Multiton</code> através da operação <code>getInstance</code> passando uma chave única.</li></ul><h2 id="consequencias" tabindex="-1"><a class="header-anchor" href="#consequencias"><span>Consequências</span></a></h2><p>O padrão Multiton apresenta vários benefícios:</p><ol><li><strong>Controle sobre o número de instâncias:</strong> Permite controlar e limitar o número de instâncias de uma classe, assegurando que apenas instâncias necessárias sejam criadas.</li><li><strong>Acesso global e controlado:</strong> Facilita o acesso a instâncias específicas através de uma chave, evitando a criação de instâncias desnecessárias.</li><li><strong>Reuso de instâncias:</strong> Garante que instâncias para uma chave específica sejam reutilizadas, evitando a criação de múltiplas instâncias para a mesma chave.</li></ol><h2 id="implementacao" tabindex="-1"><a class="header-anchor" href="#implementacao"><span>Implementação</span></a></h2><ol><li><p><strong>Gerenciamento de instâncias:</strong> O padrão Multiton utiliza um mapa para gerenciar instâncias, garantindo que apenas uma instância seja criada para cada chave.</p></li><li><p><strong>Inicialização da Instância:</strong> A primeira vez que um cliente solicita uma instância com uma chave específica, uma nova instância é criada e adicionada ao mapa. Instâncias subsequentes para a mesma chave retornam a instância existente no mapa.</p></li><li><p><strong>Construtor Privado:</strong> O construtor da classe é privado para evitar a criação de instâncias fora da classe. Isso garante que as instâncias só possam ser criadas e gerenciadas pela própria classe Multiton.</p></li><li><p><strong>Gerenciamento de Chaves:</strong> As chaves usadas para acessar as instâncias devem ser únicas e bem definidas. O mapa associa cada chave a uma única instância, permitindo o acesso controlado às instâncias.</p></li><li><p><strong>Sincronização:</strong> Em aplicações multi-threaded, é importante garantir que o método que cria instâncias seja thread-safe. Isso pode ser feito sincronizando o bloco de código que cria novas instâncias ou usando outras técnicas de sincronização.</p></li></ol><h2 id="exemplos" tabindex="-1"><a class="header-anchor" href="#exemplos"><span>Exemplos</span></a></h2><h3 id="java-design-patterns" tabindex="-1"><a class="header-anchor" href="#java-design-patterns"><span>Java Design Patterns</span></a></h3><pre><code>public enum NazgulName {
KHAMUL, MURAZOR, DWAR, JI_INDUR, AKHORAHIL, HOARMURATH, ADUNAPHEL, REN, UVATHA
}

public final class Nazgul {
  private static final Map&lt;NazgulName, Nazgul&gt; nazguls;

  @Getter
  private final NazgulName name;

  static {
      nazguls = new ConcurrentHashMap&lt;&gt;();
      nazguls.put(NazgulName.KHAMUL, new Nazgul(NazgulName.KHAMUL));
      nazguls.put(NazgulName.MURAZOR, new Nazgul(NazgulName.MURAZOR));
      nazguls.put(NazgulName.DWAR, new Nazgul(NazgulName.DWAR));
      nazguls.put(NazgulName.JI_INDUR, new Nazgul(NazgulName.JI_INDUR));
      nazguls.put(NazgulName.AKHORAHIL, new Nazgul(NazgulName.AKHORAHIL));
      nazguls.put(NazgulName.HOARMURATH, new Nazgul(NazgulName.HOARMURATH));
      nazguls.put(NazgulName.ADUNAPHEL, new Nazgul(NazgulName.ADUNAPHEL));
      nazguls.put(NazgulName.REN, new Nazgul(NazgulName.REN));
      nazguls.put(NazgulName.UVATHA, new Nazgul(NazgulName.UVATHA));
  }

  private Nazgul(NazgulName name) {
      this.name = name;
  }

  public static Nazgul getInstance(NazgulName name) {
      return nazguls.get(name);
  }
}

public static void main(String[] args) {
  LOGGER.info(&quot;Printing out eagerly initialized multiton contents&quot;);
  LOGGER.info(&quot;KHAMUL={}&quot;, Nazgul.getInstance(NazgulName.KHAMUL));
  LOGGER.info(&quot;MURAZOR={}&quot;, Nazgul.getInstance(NazgulName.MURAZOR));
  LOGGER.info(&quot;DWAR={}&quot;, Nazgul.getInstance(NazgulName.DWAR));
  LOGGER.info(&quot;JI_INDUR={}&quot;, Nazgul.getInstance(NazgulName.JI_INDUR));
  LOGGER.info(&quot;AKHORAHIL={}&quot;, Nazgul.getInstance(NazgulName.AKHORAHIL));
  LOGGER.info(&quot;HOARMURATH={}&quot;, Nazgul.getInstance(NazgulName.HOARMURATH));
  LOGGER.info(&quot;ADUNAPHEL={}&quot;, Nazgul.getInstance(NazgulName.ADUNAPHEL));
  LOGGER.info(&quot;REN={}&quot;, Nazgul.getInstance(NazgulName.REN));
  LOGGER.info(&quot;UVATHA={}&quot;, Nazgul.getInstance(NazgulName.UVATHA));

  // enum multiton
  LOGGER.info(&quot;Printing out enum-based multiton contents&quot;);
  LOGGER.info(&quot;KHAMUL={}&quot;, NazgulEnum.KHAMUL);
  LOGGER.info(&quot;MURAZOR={}&quot;, NazgulEnum.MURAZOR);
  LOGGER.info(&quot;DWAR={}&quot;, NazgulEnum.DWAR);
  LOGGER.info(&quot;JI_INDUR={}&quot;, NazgulEnum.JI_INDUR);
  LOGGER.info(&quot;AKHORAHIL={}&quot;, NazgulEnum.AKHORAHIL);
  LOGGER.info(&quot;HOARMURATH={}&quot;, NazgulEnum.HOARMURATH);
  LOGGER.info(&quot;ADUNAPHEL={}&quot;, NazgulEnum.ADUNAPHEL);
  LOGGER.info(&quot;REN={}&quot;, NazgulEnum.REN);
  LOGGER.info(&quot;UVATHA={}&quot;, NazgulEnum.UVATHA);
}
</code></pre><h3 id="meu-exemplo" tabindex="-1"><a class="header-anchor" href="#meu-exemplo"><span>Meu Exemplo</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">TipoVeiculo</span> <span class="token punctuation">{</span>
    <span class="token function">CARRO</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&quot;Gasolina&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">MOTO</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;Gasolina&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">ONIBUS</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token string">&quot;Diesel&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">BICICLETA</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;Manual&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> numeroRodas<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> capacidadePassageiros<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> tipoCombustivel<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">TipoVeiculo</span><span class="token punctuation">(</span><span class="token keyword">int</span> numeroRodas<span class="token punctuation">,</span> <span class="token keyword">int</span> capacidadePassageiros<span class="token punctuation">,</span> <span class="token class-name">String</span> tipoCombustivel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>numeroRodas <span class="token operator">=</span> numeroRodas<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>capacidadePassageiros <span class="token operator">=</span> capacidadePassageiros<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>tipoCombustivel <span class="token operator">=</span> tipoCombustivel<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getNumeroRodas</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> numeroRodas<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getCapacidadePassageiros</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> capacidadePassageiros<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getTipoCombustivel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> tipoCombustivel<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TipoVeiculo</span> veiculo <span class="token operator">:</span> <span class="token class-name">TipoVeiculo</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Tipo de Veículo: &quot;</span> <span class="token operator">+</span> veiculo<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Número de Rodas: &quot;</span> <span class="token operator">+</span> veiculo<span class="token punctuation">.</span><span class="token function">getNumeroRodas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Capacidade de Passageiros: &quot;</span> <span class="token operator">+</span> veiculo<span class="token punctuation">.</span><span class="token function">getCapacidadePassageiros</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Tipo de Combustível: &quot;</span> <span class="token operator">+</span> veiculo<span class="token punctuation">.</span><span class="token function">getTipoCombustivel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27)),p(n,{id:"mermaid-153",code:"eJytkkELgkAQhe/+ij0a1R+ICHTrIJSGWpfoMOmyDOiu7K5dov+eq6BZHp3T8t7je7MwWQFa7xG4gtIhzbQCSbGSV4ZZXUjyanU72y0TdckUGJRit+v1JfXiOHJRGNL6MpY56BWxQgYVZJhDzs4NGDhDJRsrMQoFJ6bpobJ81NrgkxWLAXmK0pmJURj4l2Reph/QgB4PqTcrtn+sf6hjY5I+RKZb/kuWnJlw6HAXG7v7yKZTTVNBezdfZTbSrTGkSkDhduLtTkBx3X387TgfIR3Olg=="})])}const g=e(l,[["render",u],["__file","Multiton.html.vue"]]),v=JSON.parse('{"path":"/includes/seminario-1-GuiSamp/Multiton.html","title":"Multiton: Criação de Objetos","lang":"pt-BR","frontmatter":{"description":"Multiton: Criação de Objetos Intenção Garantir que uma classe tenha um número fixo de instâncias e fornecer um ponto global de acesso para essas instâncias. Também conhecido com...","head":[["meta",{"property":"og:url","content":"https://20241-ifba-saj-ads-ppr.github.io/blog-material-aula/blog-material-aula/includes/seminario-1-GuiSamp/Multiton.html"}],["meta",{"property":"og:site_name","content":"20241 PPR Blog das Aulas"}],["meta",{"property":"og:title","content":"Multiton: Criação de Objetos"}],["meta",{"property":"og:description","content":"Multiton: Criação de Objetos Intenção Garantir que uma classe tenha um número fixo de instâncias e fornecer um ponto global de acesso para essas instâncias. Também conhecido com..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"pt-BR"}],["meta",{"property":"article:author","content":"Leandro Souza"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Multiton: Criação de Objetos\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Leandro Souza\\",\\"url\\":\\"https://github.com/leandro-costa\\"}]}"]]},"headers":[{"level":2,"title":"Intenção","slug":"intencao","link":"#intencao","children":[]},{"level":2,"title":"Também conhecido como","slug":"tambem-conhecido-como","link":"#tambem-conhecido-como","children":[]},{"level":2,"title":"Motivação","slug":"motivacao","link":"#motivacao","children":[]},{"level":2,"title":"Aplicabilidade","slug":"aplicabilidade","link":"#aplicabilidade","children":[]},{"level":2,"title":"Estrutura","slug":"estrutura","link":"#estrutura","children":[]},{"level":2,"title":"Participantes","slug":"participantes","link":"#participantes","children":[]},{"level":2,"title":"Colaborações","slug":"colaboracoes","link":"#colaboracoes","children":[]},{"level":2,"title":"Consequências","slug":"consequencias","link":"#consequencias","children":[]},{"level":2,"title":"Implementação","slug":"implementacao","link":"#implementacao","children":[]},{"level":2,"title":"Exemplos","slug":"exemplos","link":"#exemplos","children":[{"level":3,"title":"Java Design Patterns","slug":"java-design-patterns","link":"#java-design-patterns","children":[]},{"level":3,"title":"Meu Exemplo","slug":"meu-exemplo","link":"#meu-exemplo","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":2.62,"words":785},"filePathRelative":"includes/seminario-1-GuiSamp/Multiton.md","autoDesc":true}');export{g as comp,v as data};
